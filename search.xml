<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用hexo搭建个人博客</title>
    <url>/2021/03/10/blog/</url>
    <content><![CDATA[<p>强烈推荐！！！使用hexo，基于gitgub搭建你想要的博客。Hexo 是一个快速、简洁且高效的博客框架。</p>
<span id="more"></span>

<!-- toc -->

<ul>
<li><a href="#43%E8%AE%BE%E7%BD%AE-rss%E6%A0%B7%E5%BC%8F%E9%A3%8E%E6%A0%BC">4.3.设置 RSS(样式风格)</a></li>
<li><a href="#44%E8%AE%BE%E7%BD%AE%E9%98%85%E8%AF%BB%E5%85%A8%E6%96%87">4.4.设置阅读全文</a></li>
<li><a href="#45%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD">4.5.添加评论功能</a><ul>
<li><a href="#1%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9valine">1.为什么选择Valine</a></li>
<li><a href="#2%E7%AC%AC%E4%B8%80%E6%AD%A5%E6%B3%A8%E5%86%8Cleanclound%E8%8E%B7%E5%8F%96app-id-%E5%92%8C-app-key">2.第一步，注册LeanClound,获取APP ID 和 APP Key</a></li>
<li><a href="#3%E5%9C%A8hexo-next%E4%B8%BB%E9%A2%98%E4%B8%AD%E9%85%8D%E7%BD%AE">3.在Hexo Next主题中配置</a></li>
</ul>
</li>
<li><a href="#46%E8%AE%BE%E7%BD%AE%E5%A4%B4%E5%83%8F">4.6.设置头像</a></li>
<li><a href="#47%E8%AE%BE%E7%BD%AE%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6">4.7.设置文章置顶</a></li>
<li><a href="#48%E5%90%AF%E7%94%A8%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD">4.8.启用代码块复制功能</a></li>
<li><a href="#49%E6%B7%BB%E5%8A%A0-live2d-%E7%9C%8B%E6%9D%BF%E5%A8%98-%E8%90%8C%E5%AE%A0">4.9.添加 Live2D 看板娘 萌宠</a></li>
</ul>
<ul>
<li><a href="#step-3">Step 3</a><ul>
<li><a href="#410%E6%B7%BB%E5%8A%A0%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E6%95%88%E6%9E%9C">4.10.添加鼠标点击效果</a></li>
<li><a href="#image-20210311164038387blogimage-20210311164038387png"><img src="/2021/03/10/blog/image-20210311164038387.png" alt="image-20210311164038387"></a></li>
<li><a href="#411%E6%B7%BB%E5%8A%A0%E5%9B%BE%E7%89%87%E6%94%BE%E5%A4%A7%E9%A2%84%E8%A7%88%E5%8A%9F%E8%83%BD">4.11.添加图片放大预览功能</a></li>
<li><a href="#412%E6%B7%BB%E5%8A%A0%E9%9B%AA%E8%8A%B1%E9%A3%98%E8%90%BD%E8%83%8C%E6%99%AF%E6%95%88%E6%9E%9C">4.12.添加雪花飘落背景效果</a></li>
</ul>
</li>
</ul>
<!-- tocstop -->

<p>` 就行了</p>
<h3><span id="43设置-rss样式风格">4.3.设置 RSS(样式风格)</span></h3><p>NexT 中 RSS 有三个设置选项，满足特定的使用场景：</p>
<p>首先在站点根目录下执行下列命令安装插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>

<p>更改 主题配置文件，设定 rss 字段的值如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rss: url  <span class="comment">#url就是的的连接</span></span><br></pre></td></tr></table></figure>

<p>重新生成、启动服务器显示如下：</p>
<p><img src="/2021/03/10/blog/image-20210311155816806.png" alt="image-20210311155816806"></p>
<h3><span id="44设置阅读全文">4.4.设置阅读全文</span></h3><p>在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。NexT 提供三种方式来控制文章在首页的显示方式。也就是说，在首页显示文章的摘录并显示 阅读全文 按钮，可以通过以下方法实现：</p>
<p>使用 <code>&lt;!-- more --&gt;</code><br>在文章中嵌入 <code>&lt;!-- more --&gt;</code>标记，Hexo 会将其之上的内容作为首页预览内容，这是 Hexo 提供的方式</p>
<p>这个基本功一定要会，所以这儿我又重复写了一遍</p>
<h3><span id="45添加评论功能">4.5.添加评论功能</span></h3><p>推荐： Valine</p>
<h4><span id="1为什么选择valine">1.为什么选择Valine</span></h4><p>在笔者进行评论系统选择时，我觉得我的需求就是方便，简洁，最重要一点是要支持Markdown ，对比之下，最终选定了这款Valine，当然，如果你不喜欢这样简洁的，可以参考 Hexo（NexT 主题）评论系统哪个好？</p>
<h4><span id="2第一步注册leanclound获取app-id-和-app-key">2.第一步，注册LeanClound,获取APP ID 和 APP Key</span></h4><p>链接： <a href="https://valine.js.org/quickstart.html">https://valine.js.org/quickstart.html</a></p>
<p>Valine 是基于 LeanCloud 作为数据存储的，所以需要注册一个账号，注册完成后，我们找到创建应用</p>
<p>在这里填写你的应用名称,名称可以自己定义，然后下面选择开发版 点击创建。</p>
<p>然后点击应用进入设置。</p>
<p>然后点击设置 &gt; 安全中心 ,将除了数据存储的服务全部关闭。</p>
<p><img src="/2021/03/10/blog/fhsidhfsdi.png" alt="fhsidhfsdi"></p>
<p>最后点击应用 Key 取得我们 AppKey 和 App id</p>
<h4><span id="3在hexo-next主题中配置">3.在Hexo Next主题中配置</span></h4><p>首先打开 <a href="https://www.jsdelivr.com/package/npm/valine">https://www.jsdelivr.com/package/npm/valine</a> 获取最新的 valine.min.js 的cdn地址：</p>
<p><img src="/2021/03/10/blog/adfdaad.png" alt="adfdaad"></p>
<p>然后我们修改主题配置文件，配置CDN：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span> <span class="string">https://cdn.jsdelivr.net/npm/valine@1.3.9/dist/Valine.min.js</span> </span><br></pre></td></tr></table></figure>

<p>再打开配置Valine功能：(记得修改key)</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># More info available at https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line"> <span class="comment"># 功能开关</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version</span></span><br><span class="line">  <span class="attr">appid:</span>  <span class="comment"># Your leancloud application appid #LeanClound获得的appid</span></span><br><span class="line">  <span class="attr">appkey:</span>  <span class="comment"># Your leancloud application appkey #LeanClound获得的appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># Mail notifier. See: https://github.com/xCss/Valine/wiki # 邮件提醒</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code </span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">欢迎畅所欲言</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style #默认头像设置</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-cn</span> <span class="comment"># Language, available values: en, zh-cn # 语言，设为zh-cn</span></span><br><span class="line">  <span class="comment"># 是否开启当前文章阅读量统计</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors&#x27; for counter compatibility. Article reading statistic https://valine.js.org/visitor.html</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>每篇文章默认都会开启评论功能，包括about，tags这些</p>
<p>所以，在不需要评论的地方你可以关闭</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>例如：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">about</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2021-03-10 20:24:43</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;about&quot;</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>当然， 会帮你储存、管理这些评论</p>
<p><img src="/2021/03/10/blog/image-20210311161651870.png" alt="image-20210311161651870"></p>
<p>你可以到这里，为所欲为啦（删除某个评论等等）</p>
<h3><span id="46设置头像">4.6.设置头像</span></h3><p>主题配置文件：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/uploads/my.jpg</span> <span class="comment">#/images/avatar.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span>  <span class="comment">#是否显示呈圆形，默认是方的</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span>  <span class="comment">#鼠标放在图片上时 是否可以旋转</span></span><br></pre></td></tr></table></figure>

<p>把你的图片放在/source/uploads下面（如果没有就新建文件夹</p>
<h3><span id="47设置文章置顶">4.7.设置文章置顶</span></h3><p>Hexo 默认主页文章按日期降序。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: 博客主页根路径. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: 每页显示文章数量. (0 = 禁用分页)</span></span><br><span class="line"><span class="comment"># order_by: 文章排序. (默认按日期降序)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></table></figure>

<p>安装 <a href="https://github.com/netcan/hexo-generator-index-pin-top">hexo-generator-index-pin-top</a></p>
<p>首先是卸载默认排序插件，安装新插件，新插件支持文章置顶：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>

<p>置顶文章</p>
<p>在需要置顶的文章的 <code>front-matter</code> 中设置 <code>top: 1</code> 即可实现文章置顶功能，并且数字越大文章越靠前，如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">top: 1</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>添加置顶图标<br>上面置顶文章会文章排在前面，但是不会有任何有关 “置顶” 的标识。我们可以修改 NexT 主题的/themes/next/layout/_macro/post.swig 文件，在 <div class="post-meta"> 下加入 “置顶” 标识，如图标和文字描述：</div></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">%</span> <span class="string">if</span> <span class="string">post.top</span> <span class="string">%</span>&#125;</span><br><span class="line">  <span class="string">&lt;i</span> <span class="string">class=&quot;fa</span> <span class="string">fa-thumb-tack&quot;&gt;&lt;/i&gt;</span></span><br><span class="line">  <span class="string">&lt;font</span> <span class="string">color=7D26CD&gt;&#123;&#123;</span> <span class="string">__(&#x27;post.sticky&#x27;)</span> <span class="string">&#125;&#125;&lt;/font&gt;</span></span><br><span class="line">  <span class="string">&lt;span</span> <span class="string">class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure>

<h3><span id="48启用代码块复制功能">4.8.启用代码块复制功能</span></h3><p>编辑 <code>主题配置文件</code>，启用 <code>codeblock</code> 模块，如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Manual define the border radius in codeblock, leave it blank for the default value: 1</span></span><br><span class="line">  <span class="attr">border_radius:</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Style: only &#x27;flat&#x27; is currently available, leave it blank if you prefer default theme</span></span><br><span class="line">    <span class="attr">style:</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/10/blog/image-20210311162819748.png" alt="image-20210311162819748"></p>
<h3><span id="49添加-live2d-看板娘-萌宠">4.9.添加 Live2D 看板娘 萌宠</span></h3><p>插件 <code>hexo-helper-live2d</code> 的使用说明详见 <a href="https://github.com/EYHN/hexo-helper-live2d">https://github.com/EYHN/hexo-helper-live2d</a></p>
<p>Step 1</p>
<p>进入到工程目录下，安装 Hexo 插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-helper-live2d --save</span><br></pre></td></tr></table></figure>

<p>Step 2<br>在 插件作者的博客 中挑选一个模型，记录该模型的名字。模型资源名称为 live2d-widget-model-模型名称，例如选择模型 shizuku ，则其对应的 Live2D 资源名称为 live2d-widget-model-shizuku，然后直接在站点根目录下安装该模型，命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install live2d-widget-model-shizuku --save</span><br></pre></td></tr></table></figure>

<h2><span id="step-3">Step 3</span></h2><p>编辑 <code>站点配置文件</code>，添加如下内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo plugin: hexo-helper-live2d</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># Root path of plugin to be on the site (Relative)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># JavaScript path related to plugin&#x27;s root (Relative)</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># Relative model path related to plugin&#x27;s root (Relative)</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># Default</span></span><br><span class="line">  <span class="comment">#scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">  <span class="comment">#scriptFrom: unpkg # unpkg CDN</span></span><br><span class="line">  <span class="comment">#scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # Your custom url</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># Whether only to replace live2d tag instead of inject to all pages</span></span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span> <span class="comment"># Whether to show logs in console</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-shizuku</span> <span class="comment"># npm-module package name</span></span><br><span class="line">    <span class="comment">#use: wanko # folder name in (hexo base dir)/live2d_models/</span></span><br><span class="line">    <span class="comment">#use: ./wives/wanko # folder path relative to hexo base dir</span></span><br><span class="line">    <span class="comment">#use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # Your custom url</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">hHeadPos:</span> <span class="number">0.5</span></span><br><span class="line">    <span class="attr">vHeadPos:</span> <span class="number">0.618</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">superSample:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">hOffset:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">vOffset:</span> <span class="number">-10</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">0.05</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacityDefault:</span> <span class="number">0.7</span></span><br><span class="line">    <span class="attr">opacityOnHover:</span> <span class="number">0.2</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/10/blog/image-20210311163110377.png" alt="image-20210311163110377"></p>
<p>默认在页面右下角，上面的参数也可以自己调整</p>
<p>个人还喜欢的动图</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">可选：Epsilon2.1</span> <span class="string">nipsilon</span> <span class="string">z16</span> <span class="string">hibiki</span></span><br><span class="line"><span class="string">使用</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">live2d-widget-model-shizuku</span> <span class="string">--save</span> <span class="string">安装</span></span><br></pre></td></tr></table></figure>

<h3><span id="410添加鼠标点击效果">4.10.添加鼠标点击效果</span></h3><p>这个其实还比较简单，只需要在主题目录下<code>next/source/js/src</code>下面新建一个<code>clicklove.js</code>文件，当然名字可以自己任取，然后在其中加入以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*网页鼠标点击特效（爱心）*&#x2F;</span><br><span class="line">!function (e, t, a) &#123;function r() &#123;for (var e &#x3D; 0; e &lt; s.length; e++) s[e].alpha &lt;&#x3D; 0 ? (t.body.removeChild(s[e].el), s.splice(e, 1)) : (s[e].y--, s[e].scale +&#x3D; .004, s[e].alpha -&#x3D; .013, s[e].el.style.cssText &#x3D; &quot;left:&quot; + s[e].x + &quot;px;top:&quot; + s[e].y + &quot;px;opacity:&quot; + s[e].alpha + &quot;;transform:scale(&quot; + s[e].scale + &quot;,&quot; + s[e].scale + &quot;) rotate(45deg);background:&quot; + s[e].color + &quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function n() &#123;var t &#x3D; &quot;function&quot; &#x3D;&#x3D; typeof e.onclick &amp;&amp; e.onclick;e.onclick &#x3D; function (e) &#123;t &amp;&amp; t(), o(e)&#125;&#125;function o(e) &#123;var a &#x3D; t.createElement(&quot;div&quot;);a.className &#x3D; &quot;heart&quot;, s.push(&#123;el: a,x: e.clientX - 5,y: e.clientY - 5,scale: 1,alpha: 1,color: c()&#125;), t.body.appendChild(a)&#125;function i(e) &#123;var a &#x3D; t.createElement(&quot;style&quot;);a.type &#x3D; &quot;text&#x2F;css&quot;;try &#123;a.appendChild(t.createTextNode(e))&#125; catch (t) &#123;a.styleSheet.cssText &#x3D; e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function c() &#123;return &quot;rgb(&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;)&quot;&#125;var s &#x3D; [];e.requestAnimationFrame &#x3D; e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (e) &#123;setTimeout(e, 1e3 &#x2F; 60)&#125;, i(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#39;&#39;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;), n(), r()&#125;(window, document);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>上面这个是鼠标点击出现小心心的文件，也可以加上鼠标点击出现社会主义核心价值观的js文件，如果只想要一个就只加一个文件即可，在刚才的目录下继续创建<code>clicksocialvalue.js</code>文件，然后在文件中加入以下内容：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> coreSocialistValues = [<span class="string">&quot;富强&quot;</span>, <span class="string">&quot;民主&quot;</span>, <span class="string">&quot;文明&quot;</span>, <span class="string">&quot;和谐&quot;</span>, <span class="string">&quot;自由&quot;</span>, <span class="string">&quot;平等&quot;</span>, <span class="string">&quot;公正&quot;</span>, <span class="string">&quot;法治&quot;</span>, <span class="string">&quot;爱国&quot;</span>, <span class="string">&quot;敬业&quot;</span>, <span class="string">&quot;诚信&quot;</span>, <span class="string">&quot;友善&quot;</span>],</span><br><span class="line">    index = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * coreSocialistValues.length);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">document</span>.body.addEventListener(<span class="string">&#x27;click&#x27;</span>,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//过滤a标签</span></span><br><span class="line">        <span class="keyword">if</span> (e.target.tagName == <span class="string">&#x27;A&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> x = e.pageX,</span><br><span class="line">        y = e.pageY,</span><br><span class="line">        span = <span class="built_in">document</span>.createElement(<span class="string">&#x27;span&#x27;</span>);</span><br><span class="line">        span.textContent = coreSocialistValues[index];</span><br><span class="line">        index = (index + <span class="number">1</span>) % coreSocialistValues.length;</span><br><span class="line">        span.style.cssText = [<span class="string">&#x27;z-index: 9999999; position: absolute; font-weight: bold; color: #ff6651; top: &#x27;</span>, y - <span class="number">20</span>, <span class="string">&#x27;px; left: &#x27;</span>, x, <span class="string">&#x27;px;&#x27;</span>].join(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(span);</span><br><span class="line">        animate(span);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>

<p>当然如果两个都需要的话，可以直接将两个文件的代码合并到一个文件即可。</p>
<p>然后在主题目录下<code>next/layout/_layout.swig</code>文件中的<code>&lt;body&gt;&lt;/body&gt;</code>体标签内引入刚才创建的js文件：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% include &#x27;_third-party/comments/index.swig&#x27; %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/src/clicklove.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/src/clicksocialvalue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3><span id><img src="/2021/03/10/blog/image-20210311164038387.png" alt="image-20210311164038387"></span></h3><h3><span id="411添加图片放大预览功能">4.11.添加图片放大预览功能</span></h3><p>利用 Fancybox 能放大查看图片。</p>
<p>有 <a href="https://github.com/theme-next/theme-next-fancybox">Fancybox2</a> 和 <a href="https://github.com/theme-next/theme-next-fancybox3">Fancybox3</a> 两个版本，这里使用 Fancybox3。</p>
<p>如果已经有 fancybox2 的，需要在站点根目录下执行下列命令进行删除：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rm -rf themes/next/<span class="built_in">source</span>/lib/fancybox</span><br></pre></td></tr></table></figure>

<p>进入到 <code>themes/next</code> 主题目录下，执行以下命令安装 fancybox3 模块</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-fancybox3 <span class="built_in">source</span>/lib/fancybox</span><br></pre></td></tr></table></figure>

<p>编辑 <code>主题配置文件</code>，启用 fancybox，修改配置如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><img src="/2021/03/10/blog/image-20210311163717656.png" alt="image-20210311163717656"></p>
<h3><span id="412添加雪花飘落背景效果">4.12.添加雪花飘落背景效果</span></h3><p>在\blog\themes\next\source\js目录下新建snow2.js文件，添加如下代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*样式一*/</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">    $.fn.snow = <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $flake = $(<span class="string">&#x27;&lt;div id=&quot;snowbox&quot; /&gt;&#x27;</span>).css(&#123;</span><br><span class="line">                <span class="string">&#x27;position&#x27;</span>: <span class="string">&#x27;absolute&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;z-index&#x27;</span>: <span class="string">&#x27;9999&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;top&#x27;</span>: <span class="string">&#x27;-50px&#x27;</span></span><br><span class="line">            &#125;).html(<span class="string">&#x27;❄&#x27;</span>),</span><br><span class="line">            documentHeight = $(<span class="built_in">document</span>).height(),</span><br><span class="line">            documentWidth = $(<span class="built_in">document</span>).width(),</span><br><span class="line">            defaults = &#123;</span><br><span class="line">                minSize: <span class="number">10</span>,</span><br><span class="line">                maxSize: <span class="number">20</span>,</span><br><span class="line">                newOn: <span class="number">1000</span>,</span><br><span class="line">                flakeColor: <span class="string">&quot;#AFDAEF&quot;</span> <span class="comment">/* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */</span></span><br><span class="line">            &#125;,</span><br><span class="line">            options = $.extend(&#123;&#125;, defaults, options);</span><br><span class="line">        <span class="keyword">var</span> interval = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> startPositionLeft = <span class="built_in">Math</span>.random() * documentWidth - <span class="number">100</span>,</span><br><span class="line">                startOpacity = <span class="number">0.5</span> + <span class="built_in">Math</span>.random(),</span><br><span class="line">                sizeFlake = options.minSize + <span class="built_in">Math</span>.random() * options.maxSize,</span><br><span class="line">                endPositionTop = documentHeight - <span class="number">200</span>,</span><br><span class="line">                endPositionLeft = startPositionLeft - <span class="number">500</span> + <span class="built_in">Math</span>.random() * <span class="number">500</span>,</span><br><span class="line">                durationFall = documentHeight * <span class="number">10</span> + <span class="built_in">Math</span>.random() * <span class="number">5000</span>;</span><br><span class="line">            $flake.clone().appendTo(<span class="string">&#x27;body&#x27;</span>).css(&#123;</span><br><span class="line">                left: startPositionLeft,</span><br><span class="line">                opacity: startOpacity,</span><br><span class="line">                <span class="string">&#x27;font-size&#x27;</span>: sizeFlake,</span><br><span class="line">                color: options.flakeColor</span><br><span class="line">            &#125;).animate(&#123;</span><br><span class="line">                top: endPositionTop,</span><br><span class="line">                left: endPositionLeft,</span><br><span class="line">                opacity: <span class="number">0.2</span></span><br><span class="line">            &#125;, durationFall, <span class="string">&#x27;linear&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="built_in">this</span>).remove()</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;, options.newOn);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)(jQuery);</span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.fn.snow(&#123;</span><br><span class="line">        minSize: <span class="number">5</span>,</span><br><span class="line">        <span class="comment">/* 定义雪花最小尺寸 */</span></span><br><span class="line">        maxSize: <span class="number">50</span>,</span><br><span class="line">        <span class="comment">/* 定义雪花最大尺寸 */</span></span><br><span class="line">        newOn: <span class="number">300</span> <span class="comment">/* 定义密集程度，数字越小越密集 */</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>在\blog\themes\next\layout_layout.swig中添加如下代码（文件最后添加即可）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 雪花特效2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/snow2.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在\blog\themes\next_config.yml下添加如下代码（文件最后添加即可）</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 雪花特效2</span></span><br><span class="line"><span class="attr">snow2:</span> </span><br><span class="line"> <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>如果你已经引入jQuery，请忽略这一步(我本来没有引入但是引入了之后报错，不引入却正常，建议先不要引入看看能不能正常运行)</p>
<p>在第3步中，\blog\themes\next\layout_layout.swig文件中已经引入了snow2.js，需要在这之前引入jQuery，添加代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入jQuery --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//libs.baidu.com/jquery/1.8.3/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果想要无齿轮的雪花效果，将snow2.js中的代码替换为下面的代码即可</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*样式二*/</span></span><br><span class="line"><span class="comment">/* 控制下雪 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">snowFall</span>(<span class="params">snow</span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* 可配置属性 */</span></span><br><span class="line">    snow = snow || &#123;&#125;;</span><br><span class="line">    <span class="built_in">this</span>.maxFlake = snow.maxFlake || <span class="number">200</span>; <span class="comment">/* 最多片数 */</span></span><br><span class="line">    <span class="built_in">this</span>.flakeSize = snow.flakeSize || <span class="number">10</span>; <span class="comment">/* 雪花形状 */</span></span><br><span class="line">    <span class="built_in">this</span>.fallSpeed = snow.fallSpeed || <span class="number">1</span>; <span class="comment">/* 坠落速度 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 兼容写法 */</span></span><br><span class="line">requestAnimationFrame = <span class="built_in">window</span>.requestAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.mozRequestAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.webkitRequestAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.msRequestAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.oRequestAnimationFrame ||</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params">callback</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(callback, <span class="number">1000</span> / <span class="number">60</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">cancelAnimationFrame = <span class="built_in">window</span>.cancelAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.mozCancelAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.webkitCancelAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.msCancelAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.oCancelAnimationFrame;</span><br><span class="line"><span class="comment">/* 开始下雪 */</span></span><br><span class="line">snowFall.prototype.start = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* 创建画布 */</span></span><br><span class="line">    snowCanvas.apply(<span class="built_in">this</span>);</span><br><span class="line">    <span class="comment">/* 创建雪花形状 */</span></span><br><span class="line">    createFlakes.apply(<span class="built_in">this</span>);</span><br><span class="line">    <span class="comment">/* 画雪 */</span></span><br><span class="line">    drawSnow.apply(<span class="built_in">this</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 创建画布 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">snowCanvas</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* 添加Dom结点 */</span></span><br><span class="line">    <span class="keyword">var</span> snowcanvas = <span class="built_in">document</span>.createElement(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">    snowcanvas.id = <span class="string">&quot;snowfall&quot;</span>;</span><br><span class="line">    snowcanvas.width = <span class="built_in">window</span>.innerWidth;</span><br><span class="line">    snowcanvas.height = <span class="built_in">document</span>.body.clientHeight;</span><br><span class="line">    snowcanvas.setAttribute(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;&quot;</span>);</span><br><span class="line">    <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;body&quot;</span>)[<span class="number">0</span>].appendChild(snowcanvas);</span><br><span class="line">    <span class="built_in">this</span>.canvas = snowcanvas;</span><br><span class="line">    <span class="built_in">this</span>.ctx = snowcanvas.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">    <span class="comment">/* 窗口大小改变的处理 */</span></span><br><span class="line">    <span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        snowcanvas.width = <span class="built_in">window</span>.innerWidth;</span><br><span class="line">        <span class="comment">/* snowcanvas.height = window.innerHeight */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 雪运动对象 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">flakeMove</span>(<span class="params">canvasWidth, canvasHeight, flakeSize, fallSpeed</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.x = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * canvasWidth); <span class="comment">/* x坐标 */</span></span><br><span class="line">    <span class="built_in">this</span>.y = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * canvasHeight); <span class="comment">/* y坐标 */</span></span><br><span class="line">    <span class="built_in">this</span>.size = <span class="built_in">Math</span>.random() * flakeSize + <span class="number">2</span>; <span class="comment">/* 形状 */</span></span><br><span class="line">    <span class="built_in">this</span>.maxSize = flakeSize; <span class="comment">/* 最大形状 */</span></span><br><span class="line">    <span class="built_in">this</span>.speed = <span class="built_in">Math</span>.random() * <span class="number">1</span> + fallSpeed; <span class="comment">/* 坠落速度 */</span></span><br><span class="line">    <span class="built_in">this</span>.fallSpeed = fallSpeed; <span class="comment">/* 坠落速度 */</span></span><br><span class="line">    <span class="built_in">this</span>.velY = <span class="built_in">this</span>.speed; <span class="comment">/* Y方向速度 */</span></span><br><span class="line">    <span class="built_in">this</span>.velX = <span class="number">0</span>; <span class="comment">/* X方向速度 */</span></span><br><span class="line">    <span class="built_in">this</span>.stepSize = <span class="built_in">Math</span>.random() / <span class="number">30</span>; <span class="comment">/* 步长 */</span></span><br><span class="line">    <span class="built_in">this</span>.step = <span class="number">0</span> <span class="comment">/* 步数 */</span></span><br><span class="line">&#125;</span><br><span class="line">flakeMove.prototype.update = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="built_in">this</span>.x,</span><br><span class="line">        y = <span class="built_in">this</span>.y;</span><br><span class="line">    <span class="comment">/* 左右摆动(余弦) */</span></span><br><span class="line">    <span class="built_in">this</span>.velX *= <span class="number">0.98</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.velY &lt;= <span class="built_in">this</span>.speed) &#123;</span><br><span class="line">        <span class="built_in">this</span>.velY = <span class="built_in">this</span>.speed</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.velX += <span class="built_in">Math</span>.cos(<span class="built_in">this</span>.step += <span class="number">.05</span>) * <span class="built_in">this</span>.stepSize;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.y += <span class="built_in">this</span>.velY;</span><br><span class="line">    <span class="built_in">this</span>.x += <span class="built_in">this</span>.velX;</span><br><span class="line">    <span class="comment">/* 飞出边界的处理 */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.x &gt;= canvas.width || <span class="built_in">this</span>.x &lt;= <span class="number">0</span> || <span class="built_in">this</span>.y &gt;= canvas.height || <span class="built_in">this</span>.y &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">this</span>.reset(canvas.width, canvas.height)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/* 飞出边界-放置最顶端继续坠落 */</span></span><br><span class="line">flakeMove.prototype.reset = <span class="function"><span class="keyword">function</span> (<span class="params">width, height</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.x = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * width);</span><br><span class="line">    <span class="built_in">this</span>.y = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.size = <span class="built_in">Math</span>.random() * <span class="built_in">this</span>.maxSize + <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">this</span>.speed = <span class="built_in">Math</span>.random() * <span class="number">1</span> + <span class="built_in">this</span>.fallSpeed;</span><br><span class="line">    <span class="built_in">this</span>.velY = <span class="built_in">this</span>.speed;</span><br><span class="line">    <span class="built_in">this</span>.velX = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 渲染雪花-随机形状（此处可修改雪花颜色！！！）</span></span><br><span class="line">flakeMove.prototype.render = <span class="function"><span class="keyword">function</span> (<span class="params">ctx</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> snowFlake = ctx.createRadialGradient(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="number">0</span>, <span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.size);</span><br><span class="line">    snowFlake.addColorStop(<span class="number">0</span>, <span class="string">&quot;rgba(255, 255, 255, 0.9)&quot;</span>); <span class="comment">/* 此处是雪花颜色，默认是白色 */</span></span><br><span class="line">    snowFlake.addColorStop(<span class="number">.5</span>, <span class="string">&quot;rgba(255, 255, 255, 0.5)&quot;</span>); <span class="comment">/* 若要改为其他颜色，请自行查 */</span></span><br><span class="line">    snowFlake.addColorStop(<span class="number">1</span>, <span class="string">&quot;rgba(255, 255, 255, 0)&quot;</span>); <span class="comment">/* 找16进制的RGB 颜色代码。 */</span></span><br><span class="line">    ctx.save();</span><br><span class="line">    ctx.fillStyle = snowFlake;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.arc(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.size, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>);</span><br><span class="line">    ctx.fill();</span><br><span class="line">    ctx.restore();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/* 创建雪花-定义形状 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createFlakes</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> maxFlake = <span class="built_in">this</span>.maxFlake,</span><br><span class="line">        flakes = <span class="built_in">this</span>.flakes = [],</span><br><span class="line">        canvas = <span class="built_in">this</span>.canvas;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; maxFlake; i++) &#123;</span><br><span class="line">        flakes.push(<span class="keyword">new</span> flakeMove(canvas.width, canvas.height, <span class="built_in">this</span>.flakeSize, <span class="built_in">this</span>.fallSpeed))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 画雪 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawSnow</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> maxFlake = <span class="built_in">this</span>.maxFlake,</span><br><span class="line">        flakes = <span class="built_in">this</span>.flakes;</span><br><span class="line">    ctx = <span class="built_in">this</span>.ctx, canvas = <span class="built_in">this</span>.canvas, that = <span class="built_in">this</span>;</span><br><span class="line">    <span class="comment">/* 清空雪花 */</span></span><br><span class="line">    ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; maxFlake; e++) &#123;</span><br><span class="line">        flakes[e].update();</span><br><span class="line">        flakes[e].render(ctx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*  一帧一帧的画 */</span></span><br><span class="line">    <span class="built_in">this</span>.loop = requestAnimationFrame(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        drawSnow.apply(that);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 调用及控制方法 */</span></span><br><span class="line"><span class="keyword">var</span> snow = <span class="keyword">new</span> snowFall(&#123;</span><br><span class="line">    maxFlake: <span class="number">60</span></span><br><span class="line">&#125;);</span><br><span class="line">snow.start();</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/10/blog/image-20210311164406749.png" alt="image-20210311164406749"></p>
<p>如果你一步不跳到了这里，那我相信你已经熟悉了基本的修改流程，如果你还想增加一些高级效果，请自行百度，我这里就不多写了，当然我还加了不少别的东西，但我感觉不是很必要，所以就没有写进来了。</p>
<p>可参考链接：Hexo 个人博客 NexT 主题进阶配置<a href="https://blog.csdn.net/qq_32767041/article/details/103284412">https://blog.csdn.net/qq_32767041/article/details/103284412</a></p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/03/10/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2><span id="quick-start">Quick Start</span></h2><h3><span id="create-a-new-post">Create a new post</span></h3><h2><span id><span id="more"></span></span></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3><span id="run-server">Run server</span></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3><span id="generate-static-files">Generate static files</span></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3><span id="deploy-to-remote-sites">Deploy to remote sites</span></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2021/03/11/test/</url>
    <content><![CDATA[<p><img src="/2021/03/11/test/%25G30EUVMQS5DFQP4ML6AECB.png" alt="图片"></p>
]]></content>
  </entry>
</search>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>周吉吉的博客</title>
  
  <subtitle>周吉吉的博客</subtitle>
  <link href="http://zhouzhe111.github.io/atom.xml" rel="self"/>
  
  <link href="http://zhouzhe111.github.io/"/>
  <updated>2021-03-14T12:14:16.360Z</updated>
  <id>http://zhouzhe111.github.io/</id>
  
  <author>
    <name>JJZhou</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>svn服务器的搭建（centos7）</title>
    <link href="http://zhouzhe111.github.io/2021/03/14/svn/"/>
    <id>http://zhouzhe111.github.io/2021/03/14/svn/</id>
    <published>2021-03-14T11:56:51.000Z</published>
    <updated>2021-03-14T12:14:16.360Z</updated>
    
    <content type="html"><![CDATA[<p>个人非常喜欢的文件共享、版本控制服务器，强烈推荐团队合作时使用，大大减少不必要的文件传输带来的麻烦。svn，肯定适合你~~</p><span id="more"></span><hr><!-- toc --><ul><li><a href="#%E5%89%8D%E8%A8%80">前言</a><ul><li><a href="#1-%E6%A3%80%E6%9F%A5%E7%B3%BB%E7%BB%9F%E6%98%AF%E5%90%A6%E5%B7%B2%E7%BB%8F%E5%AE%89%E8%A3%85%E5%A6%82%E6%9E%9C%E5%AE%89%E8%A3%85%E5%B0%B1%E5%8D%B8%E8%BD%BD">1、检查系统是否已经安装如果安装就卸载</a><ul><li><a href="#%E6%A3%80%E6%9F%A5">检查：</a></li><li><a href="#%E5%8D%B8%E8%BD%BD">卸载：</a></li></ul></li><li><a href="#2-%E5%AE%89%E8%A3%85">2、安装</a></li><li><a href="#3-%E5%BB%BA%E7%AB%8Bsvn%E5%BA%93%E6%96%87%E4%BB%B6%E4%BD%8D%E7%BD%AE%E5%8F%AF%E8%87%AA%E7%94%B1">3、建立SVN库（文件位置可自由）</a><ul><li><a href="#%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93%E6%96%87%E4%BB%B6%E5%A4%B9">创建仓库文件夹：</a></li><li><a href="#%E7%94%A8svn%E7%AE%A1%E7%90%86%E5%91%98%E8%BA%AB%E4%BB%BD%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%BB%93%E5%BA%93">用svn管理员身份创建一个仓库：</a></li></ul></li><li><a href="#4-%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE">4、权限配置</a><ul><li><a href="#1authz%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE%E8%AE%BE%E7%BD%AE%E5%93%AA%E4%BA%9B%E7%94%A8%E6%88%B7%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%E5%93%AA%E4%BA%9B%E7%9B%AE%E5%BD%95%E8%BF%9B%E5%85%A5varsvnrepositoryconf%E4%B8%8A%E9%9D%A2%E7%94%9F%E6%88%90%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B">（1）authz文件配置，设置哪些用户可以访问哪些目录：进入/var/svn/repository/conf上面生成的文件夹下，</a></li><li><a href="#2passwd%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE-%E4%B8%BB%E8%A6%81%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81%E4%BE%8B%E5%A6%82">（2）passwd文件配置 主要添加用户名和密码，例如：：</a></li><li><a href="#3svnserveconf-%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE-%E9%85%8D%E7%BD%AE%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90">（3）svnserve.conf 文件配置 配置访问权限</a></li></ul></li><li><a href="#5-%E5%90%AF%E5%8A%A8svn">5、启动svn</a></li><li><a href="#6%E6%9F%A5%E7%9C%8Bsvn%E8%BF%9B%E7%A8%8B">6.查看svn进程</a></li><li><a href="#7%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BF%9E%E6%8E%A5">7.客户端连接</a><ul><li><a href="#1-%E5%AE%89%E8%A3%85svn%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%80%E8%B7%AFnext%E5%8D%B3%E5%8F%AF">1、 安装svn客户端，一路next即可</a></li><li><a href="#2-%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E5%8F%B3%E9%94%AE-check-out">2、 新建文件夹，右键 check out</a></li><li><a href="#3-%E8%BE%93%E5%85%A5-url">3、 输入 url =》</a></li><li><a href="#4-%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81%E9%83%BD%E6%98%AF-usst">4、 用户名密码都是 usst</a></li><li><a href="#5-svn%E6%93%8D%E4%BD%9C">5、 Svn操作</a><ul><li><a href="#1-update-%E6%9B%B4%E6%96%B0%E5%88%B0%E6%9C%AC%E5%9C%B0">1、 update =》更新到本地</a></li><li><a href="#2-commit-%E4%B8%8A%E4%BC%A0%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8">2、 commit =》上传到服务器</a></li></ul></li></ul></li></ul></li></ul><!-- tocstop --><hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>优点：</strong></p><p><strong>1.svn优点：集中式管理，管理方式在服务端配置好，客户端只需要同步提交即可，使用方便，操作简单，很容易就可以上手</strong></p><p><strong>2.在服务端统一控制好访问权限，利用代码的安全管理。</strong></p><p><strong>3.所有的代码以服务端为准，代码一致性高。</strong></p><p><strong>缺点：</strong></p><p><strong>1.所有操作都需要通过服务端进行同步，这会导致服务器性能要求比较高。如果服务器宕机了就无法提交代码了。</strong></p><p><strong>2.分支管理不灵活，svn分支是一个完整的目录，且这个目录拥有完整的实际文件，这些操作都是在服务端进行同步的，</strong></p><p>  <strong>不是本 地化操作，如果要删除分支，也是需要将远程的分支进行删除，这会导致大家都得同步</strong></p><p><strong>3.需要连网，如果无法连接到服务器就无法提交代码</strong></p><h2 id="1-检查系统是否已经安装如果安装就卸载"><a href="#1、检查系统是否已经安装如果安装就卸载" class="headerlink" title="1、检查系统是否已经安装如果安装就卸载"></a>1、检查系统是否已经安装如果安装就卸载</h2><h3 id="检查"><a href="#检查：" class="headerlink" title="检查："></a>检查：</h3><blockquote><p>svnserve –version</p></blockquote><h3 id="卸载"><a href="#卸载：" class="headerlink" title="卸载："></a>卸载：</h3><blockquote><p>yum remove subversion</p></blockquote><h2 id="2-安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h2><blockquote><p>yum install subversion</p></blockquote><h2 id="3-建立svn库文件位置可自由"><a href="#3、建立SVN库（文件位置可自由）" class="headerlink" title="3、建立SVN库（文件位置可自由）"></a>3、建立SVN库（文件位置可自由）</h2><h3 id="创建仓库文件夹"><a href="#创建仓库文件夹：" class="headerlink" title="创建仓库文件夹："></a>创建仓库文件夹：</h3><blockquote><p>mkdir -p /var/svn/repository/</p></blockquote><h3 id="用svn管理员身份创建一个仓库"><a href="#用svn管理员身份创建一个仓库：" class="headerlink" title="用svn管理员身份创建一个仓库："></a>用svn管理员身份创建一个仓库：</h3><blockquote><p>svnadmin create /var/svn/repository/</p></blockquote><p>执行上面的命令后，自动建立repositories库，查看/var/svn/repository/ 文件夹发现包含了conf, db,format,hooks, locks, README.txt等文件，说明一个SVN库已经建立。</p><p><img src="/2021/03/14/svn/1924"></p><h2 id="4-权限配置"><a href="#4、权限配置" class="headerlink" title="4、权限配置"></a>4、权限配置</h2><h3 id="1authz文件配置设置哪些用户可以访问哪些目录进入varsvnrepositoryconf上面生成的文件夹下"><a href="#（1）authz文件配置，设置哪些用户可以访问哪些目录：进入-var-svn-repository-conf上面生成的文件夹下，" class="headerlink" title="（1）authz文件配置，设置哪些用户可以访问哪些目录：进入/var/svn/repository/conf上面生成的文件夹下，"></a>（1）authz文件配置，设置哪些用户可以访问哪些目录：进入/var/svn/repository/conf上面生成的文件夹下，</h3><blockquote><p>vi authz</p></blockquote><p>进行配置 authz文件配置，vi authz,向authz文件追加以下内容,左边是用户名，右边是读写权限(r、w、rw、no access),</p><blockquote><p>#一般 ，追加</p><p>[/]   </p><p>usst=rw</p><p>#这两行即可，格式：用户名=rw (r =&gt; read w =&gt; write)</p></blockquote><p>每个目录的读写权限都可精细控制，例如：</p><p> <img src="https://img2018.cnblogs.com/blog/1608463/201905/1608463-20190528115050747-584463236.png" alt="img"></p><h3 id="2passwd文件配置-主要添加用户名和密码例如"><a href="#（2）passwd文件配置-主要添加用户名和密码，例如：：" class="headerlink" title="（2）passwd文件配置 主要添加用户名和密码，例如：："></a>（2）passwd文件配置 主要添加用户名和密码，例如：：</h3><blockquote><p>vi passwd</p></blockquote><blockquote><p>追加</p><p>usst=usst</p><p>格式：用户名=密码</p></blockquote><p><img src="/2021/03/14/svn/1608463-20190528115217793-754927928.png"></p><h3 id="3svnserveconf-文件配置-配置访问权限"><a href="#（3）svnserve-conf-文件配置-配置访问权限" class="headerlink" title="（3）svnserve.conf 文件配置 配置访问权限"></a>（3）svnserve.conf 文件配置 配置访问权限</h3><blockquote><p>vi svnserve.conf</p></blockquote><p>追加到[general]下（或者取消注释，改写）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">anon-access = none  <span class="comment">#不允许匿名登录</span></span><br><span class="line"></span><br><span class="line">auth-access = write   <span class="comment">#写权限</span></span><br><span class="line"></span><br><span class="line">password-db = passwd  <span class="comment">#指定用户名密码配置文件</span></span><br><span class="line"></span><br><span class="line">authz-db = authz  <span class="comment">#指定账户权限配置文件</span></span><br></pre></td></tr></table></figure><p> <img src="/2021/03/14/svn/1608463-20190528115404201-1593471956.png"></p><h2 id="5-启动svn"><a href="#5、启动svn" class="headerlink" title="5、启动svn"></a>5、启动svn</h2><p>本人建议指定端口的启动方式，如果建立多个仓库，也便于管理。</p><p>svn默认端口为3690，需要在防火墙添加才可在svn客户端访问</p><p>当然，云服务器可以直接在安全组中配置防火墙</p><p>启动命令：</p><blockquote><p> svnserve -d -r /var/svn/repository/ –listen-port 3690</p></blockquote><p>建立多个的话可以选择用3691等其他端口启动</p><h2 id="6查看svn进程"><a href="#6-查看svn进程" class="headerlink" title="6.查看svn进程"></a>6.查看svn进程</h2><blockquote><p>ps -ef|grep svn</p></blockquote><p>可以看到服务启动成功，想要重新启动则kill -9 pid，再重新使用</p><blockquote><p>svnserve -d -r /opt/svn/repository –listen-port 3691</p></blockquote><p>命令启动</p><p><img src="/2021/03/14/svn/1608463-20190528120008423-631669417.png"></p><p> 这时候，用svn客户端连接会发现svn://ip:port/opt/svn/repository无法使用，这是因为linux没有开放该端口，需要手动添加；</p><p>步骤如下：</p><p>vi /etc/sysconfig/iptables,开放新端口</p><p><img src="/2021/03/14/svn/1608463-20190528120647098-2073087851.png"></p><p>重启防火墙</p><p>service iptables restart</p><p>重新使用客户端就可以正常连接了！</p><h2 id="7客户端连接"><a href="#7-客户端连接" class="headerlink" title="7.客户端连接"></a>7.客户端连接</h2><p>推荐使用TortoiseSVN <a href="https://tortoisesvn.net/">https://tortoisesvn.net/</a></p><h3 id="1-安装svn客户端一路next即可"><a href="#1、-安装svn客户端，一路next即可" class="headerlink" title="1、 安装svn客户端，一路next即可"></a>1、 安装svn客户端，一路next即可</h3><h3 id="2-新建文件夹右键-check-out"><a href="#2、-新建文件夹，右键-check-out" class="headerlink" title="2、 新建文件夹，右键 check out"></a>2、 新建文件夹，右键 check out</h3><p><img src="/2021/03/14/svn/clip_image002.jpg"></p><h3 id="3-输入-url"><a href="#3、-输入-url-》" class="headerlink" title="3、 输入 url =》"></a>3、 输入 url =》</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svn://ip:3690   <span class="comment">#ip+端口号</span></span><br><span class="line"><span class="comment">#例如  svn://106.15.250.152:3690 </span></span><br></pre></td></tr></table></figure><p>新建你本地的svn仓库， 目标文件夹（必须是空的）</p><p><img src="/2021/03/14/svn/clip_image004.jpg"></p><h3 id="4-用户名密码都是-usst"><a href="#4、-用户名密码都是-usst" class="headerlink" title="4、 用户名密码都是 usst"></a>4、 用户名密码都是 usst</h3><h3 id="5-svn操作"><a href="#5、-Svn操作" class="headerlink" title="5、 Svn操作"></a>5、 Svn操作</h3><p><img src="/2021/03/14/svn/clip_image006.jpg"></p><p>右键根目录</p><h4 id="1-update-更新到本地"><a href="#1、-update-》更新到本地" class="headerlink" title="1、 update =》更新到本地"></a>1、 update =》更新到本地</h4><p>同名文件会覆盖本地的文件</p><h4 id="2-commit-上传到服务器"><a href="#2、-commit-》上传到服务器" class="headerlink" title="2、 commit =》上传到服务器"></a>2、 commit =》上传到服务器</h4><p><img src="/2021/03/14/svn/clip_image008.jpg" alt="img"></p><p>点击ALL =》全选  =》ok </p><p>正常来说，你的仓库文件夹上有特殊标记（红点，或者绿点），就表明在正常运出行了</p><p><img src="/2021/03/14/svn/image-20210314201246127.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;个人非常喜欢的文件共享、版本控制服务器，强烈推荐团队合作时使用，大大减少不必要的文件传输带来的麻烦。svn，肯定适合你~~&lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="http://zhouzhe111.github.io/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>ftp服务器的简单搭建（centos7），并且配置虚拟用户登录</title>
    <link href="http://zhouzhe111.github.io/2021/03/14/ftp/"/>
    <id>http://zhouzhe111.github.io/2021/03/14/ftp/</id>
    <published>2021-03-14T11:17:18.000Z</published>
    <updated>2021-03-14T11:50:25.065Z</updated>
    
    <content type="html"><![CDATA[<p>ftp服务器是非常实用的网上存储工具，你可以在你的ftp上为所欲为，还可以在上面多人管理文件,来看看怎么搭建你的第一台ftp吧！</p><span id="more"></span><hr><!-- toc --><ul><li><a href="#%E5%89%8D%E8%A8%80">前言</a></li><li><a href="#1%E5%AE%89%E8%A3%85%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87">1.安装前的准备</a></li><li><a href="#2%E5%AE%89%E8%A3%85vsftpd">2.安装vsftpd</a></li><li><a href="#3%E9%85%8D%E7%BD%AEvsftpd">3.配置vsftpd</a></li><li><a href="#4%E8%BF%9E%E6%8E%A5">4.连接</a></li></ul><!-- tocstop --><hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>拥有FTP服务器的好处:</p><p>1.在本地电脑上登陆到国际互联网；</p><p>2.搜索有文件共享主机或者个人电脑(一般有专门的FTP服务器网站上公布的,上面有进入该主机或个人电脑的名称,口令和路径)；</p><p>3.当与远程主机或者对方的个人电</p><p>4.脑建立连接后,用对方提供的用户名和口令登陆到该主机或对方的个人电脑；</p><p>5.在远程主机或对方的个人电脑登陆成功后,就可以上传你想跟别人分享的东东或者下载别人授权共享的东东(这里的东东是指能放到电脑里去又能在显示屏上看到的东东)；</p><p>6.完成工作后关闭FTP下载软件,切断连接。</p><h2 id="1安装前的准备"><a href="#1-安装前的准备" class="headerlink" title="1.安装前的准备"></a>1.安装前的准备</h2><ul><li>关闭防火墙或者开端口权限。一般是firewalld或者iptables。</li><li>当然，如果你是阿里云这种云服务器，可以在安全组设置里面配置防火墙，就不需要在命令行去配置了—</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure><ul><li><p>关闭sellinux</p><p>sellinux是什么？</p><p>SELinux 主要作用就是最大限度地减小系统中服务进程可访问的资源（最小权限原则）。</p><p>所以，他的权限是非常高的，安装ftp会被他隔断权限，需要关闭</p></li></ul><p>立即关闭</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><p>重启也关闭</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;selinux&#x2F;config</span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELINUX&#x3D;disabled</span><br></pre></td></tr></table></figure><p>查看是否关闭</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getenforce</span><br></pre></td></tr></table></figure><blockquote><p>（注意！！！）SELINUX是系统自带的，必须进行下面的设置，关掉SELINUX对ftp的限制，否则ftp会没有权限</p><p>setsebool -P allow_ftpd_anon_write on<br>setsebool -P allow_ftpd_full_access on</p></blockquote><h2 id="2安装vsftpd"><a href="#2-安装vsftpd" class="headerlink" title="2.安装vsftpd"></a>2.安装vsftpd</h2><p>很简单一句话</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y vsftpd</span><br></pre></td></tr></table></figure><p>立即启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start vsftpd</span><br></pre></td></tr></table></figure><p>跟随系统启动而启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable vsftpd</span><br></pre></td></tr></table></figure><h2 id="3配置vsftpd"><a href="#3-配置vsftpd" class="headerlink" title="3.配置vsftpd"></a>3.配置vsftpd</h2><blockquote><p>（注意！！！）所有配置文件中每行必须顶格，末尾不能有空格</p><p>（注意！！！）所有配置文件中每行必须顶格，末尾不能有空格</p><p>（注意！！！）所有配置文件中每行必须顶格，末尾不能有空格</p></blockquote><ul><li>创建vsftpd使用的系统用户，主目录为/home/vsftpd，禁止ssh登录。创建之后所有虚拟用户使用这个系统用户访问文件。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd vsftpd -d &#x2F;home&#x2F;vsftpd -s &#x2F;bin&#x2F;false</span><br></pre></td></tr></table></figure><ul><li>创建虚拟用户主目录，比如虚拟用户叫ftp1，执行下面的命令。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;home&#x2F;vsftpd&#x2F;ftp1</span><br></pre></td></tr></table></figure><ul><li>创建这个虚拟用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;vsftpd&#x2F;loginusers.conf</span><br></pre></td></tr></table></figure><p>增加  //单行为用户名，双行为密码，而且用户名必须和对应的配置文件重名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ftp1</span><br><span class="line">123456</span><br></pre></td></tr></table></figure><p>这样就创建了ftp1这个虚拟用户，密码为123456</p><ul><li>根据这个文件创建数据库文件，db_load是centos自带的转换工具</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db_load -T -t <span class="built_in">hash</span> -f /etc/vsftpd/loginusers.conf /etc/vsftpd/loginusers.db</span><br><span class="line">chmod 600 /etc/vsftpd/loginusers.db   <span class="comment">#赋予权限</span></span><br></pre></td></tr></table></figure><ul><li>启用这个数据库文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;pam.d&#x2F;vsftpd</span><br></pre></td></tr></table></figure><p>注释掉所有内容后，增加下面的内容 // 把用户加到pam中进行登录验证</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auth    sufficient /lib64/security/pam_userdb.<span class="keyword">so</span> db=/etc/vsftpd/loginusers</span><br><span class="line">account sufficient /lib64/security/pam_userdb.<span class="keyword">so</span> db=/etc/vsftpd/loginusers</span><br></pre></td></tr></table></figure><ul><li>创建虚拟用户配置文件  //自定义</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;etc&#x2F;vsftpd&#x2F;userconf</span><br></pre></td></tr></table></figure><p>这里的文件名称必须与虚拟用户名一致</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;vsftpd&#x2F;userconf&#x2F;ftp1</span><br></pre></td></tr></table></figure><p>增加下面的内容 </p><blockquote><p>（注意！！！） 赋予虚拟用户相应权限，如果缺省了权限，这个虚拟用户就没有相应权限</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#浏览FTP目录和下载</span></span><br><span class="line">anon_world_readable_only=NO</span><br><span class="line"><span class="comment">#允许上传</span></span><br><span class="line">anon_upload_enable=YES</span><br><span class="line"><span class="comment">#允许建立和删除目录</span></span><br><span class="line">anon_mkdir_write_enable=YES</span><br><span class="line"><span class="comment">#允许改名和删除文件</span></span><br><span class="line">anon_other_write_enable=YES</span><br><span class="line"><span class="comment">#指定虚拟用户在系统用户下面的路径</span></span><br><span class="line">local_root=/home/vsftpd/ftp1/</span><br></pre></td></tr></table></figure><p>设定主目录为/home/vsftpd/ftp1     //这个是ftp登陆上来的主目录</p><blockquote><p>（注意！！！）这个目录默认是root所有，ftp登录为虚拟用户映射的普通用户，没有相应权限，必须修改这个根目录可以被其他用户所修改的权限， 777，这个数字相关解释可以自行百度，简单来说就是赋予所有人都可以读写以及执行这个目录的权限</p><p>chmod -R 777 /home/vsftpd/</p></blockquote><ul><li>最后修改主配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/vsftpd/vsftpd.conf</span><br></pre></td></tr></table></figure><p>更改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable=NO  <span class="comment">#禁止匿名用户登录</span></span><br></pre></td></tr></table></figure><p>去掉注释</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chroot_local_user=YES  <span class="comment">#禁止用户访问除主目录以外的目录</span></span><br><span class="line">ascii_upload_enable=YES <span class="comment">#设定支持ASCII模式的上传和下载功能</span></span><br><span class="line">ascii_download_enable=YES <span class="comment">#设定支持ASCII模式的上传和下载功能</span></span><br></pre></td></tr></table></figure><p>增加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">guest_enable=YES  <span class="comment">#启动虚拟用户</span></span><br><span class="line">guest_username=vsftpd  <span class="comment">#虚拟用户使用的系统用户名</span></span><br><span class="line">user_config_dir=/etc/vsftpd/userconf  <span class="comment">#虚拟用户使用的配置文件目录</span></span><br><span class="line">allow_writeable_chroot=YES  <span class="comment">#最新版的vsftpd为了安全必须用户主目录（也就是/home/vsftpd/ftp1）没有写权限，才能登录，或者使用</span></span><br><span class="line"><span class="comment">#allow_writeable_chroot=YES，也就是说默认是不能写的，你没有配置这个就不能写</span></span><br></pre></td></tr></table></figure><ul><li>最后重启服务使配置生效</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start vsftpd      //启动</span><br><span class="line">systemctl restart vsftpd    //重启</span><br><span class="line">systemctl status vsftpd     //查看状态</span><br></pre></td></tr></table></figure><h2 id="4连接"><a href="#4-连接" class="headerlink" title="4.连接"></a>4.连接</h2><p>推荐用fz，一个灰常好用的ftp客户端，简单易上手</p><p><a href="https://filezilla-project.org/download.php?type=client">https://filezilla-project.org/download.php?type=client</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;ftp服务器是非常实用的网上存储工具，你可以在你的ftp上为所欲为，还可以在上面多人管理文件,来看看怎么搭建你的第一台ftp吧！&lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="http://zhouzhe111.github.io/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>小z有话说</title>
    <link href="http://zhouzhe111.github.io/2021/03/11/hello/"/>
    <id>http://zhouzhe111.github.io/2021/03/11/hello/</id>
    <published>2021-03-11T14:00:31.000Z</published>
    <updated>2021-03-12T04:30:30.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我有话说"><a href="#我有话说" class="headerlink" title="我有话说"></a>我有话说</h2><p>​    这是我的第二个博客，之前的博客实在阿里云服务器上，算是草草搭建起来的吧，内容也是写的有点点随意，由于毕设要用到服务器，老是把服务器搞崩（脑瓜子疼），每次部署博客费老大劲了，所以决定重新撘个正经的博客，也方便以后写点优质的文章。</p><p>​    最近毕设有点忙，就索性先把这个博客的搭建过程详细分享出来，之前博客上的内容比如ftp，sprintgoot写的太随意不够严谨，先放一放，之后好好完善后再登出吧。</p><p><img src="/2021/03/11/hello/sasasas.jpg"></p><hr><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;我有话说&quot;&gt;&lt;a href=&quot;#我有话说&quot; class=&quot;headerlink&quot; title=&quot;我有话说&quot;&gt;&lt;/a&gt;我有话说&lt;/h2&gt;&lt;p&gt;​    这是我的第二个博客，之前的博客实在阿里云服务器上，算是草草搭建起来的吧，内容也是写的有点点随意，由于毕设要用到服务</summary>
      
    
    
    
    <category term="welcome" scheme="http://zhouzhe111.github.io/categories/welcome/"/>
    
    
  </entry>
  
  <entry>
    <title>使用hexo搭建个人博客</title>
    <link href="http://zhouzhe111.github.io/2021/03/10/blog/"/>
    <id>http://zhouzhe111.github.io/2021/03/10/blog/</id>
    <published>2021-03-10T15:53:26.000Z</published>
    <updated>2021-03-11T15:09:35.149Z</updated>
    
    <content type="html"><![CDATA[<p>强烈推荐！！！使用hexo，基于gitgub搭建你想要的博客。Hexo 是一个快速、简洁且高效的博客框架。</p><span id="more"></span><hr><!-- toc --><ul><li><a href="#%E5%89%8D%E8%A8%80">前言</a></li><li><a href="#1-%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C">1. 准备工作</a></li><li><a href="#2%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2">2.搭建github博客</a><ul><li><a href="#21-%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93">2.1. 创建仓库</a></li><li><a href="#22-%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%E5%8F%AF%E9%80%89">2.2. 绑定域名（可选）</a></li><li><a href="#23-%E6%B5%8B%E8%AF%95%E6%98%AF%E5%90%A6%E6%88%90%E5%8A%9F">2.3. 测试是否成功</a></li></ul></li><li><a href="#3%E4%BD%BF%E7%94%A8hexo%E5%86%99%E5%8D%9A%E5%AE%A2git-bash%E4%B8%AD%E5%86%99">3.使用hexo写博客（git bash中写）</a><ul><li><a href="#31-hexo%E7%AE%80%E4%BB%8B">3.1. hexo简介</a></li><li><a href="#32-%E5%8E%9F%E7%90%86">3.2. 原理</a></li><li><a href="#33-%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">3.3. 注意事项</a></li><li><a href="#34-%E5%AE%89%E8%A3%85">3.4. 安装</a></li><li><a href="#35-%E5%88%9D%E5%A7%8B%E5%8C%96">3.5. 初始化</a></li><li><a href="#36-%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E8%BF%99%E9%83%A8%E5%88%86%E8%BE%83%E9%95%BF%E5%8F%AF%E5%85%88%E8%B7%B3%E8%BF%87%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%BF%9B%E9%98%B6%E5%9C%A8-%E7%AC%AC%E5%9B%9B%E9%83%A8%E5%88%864%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%BF%9B%E9%98%B6next">3.6. 修改主题(这部分较长，可先跳过，主题配置进阶在 <a href="#4.%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%BF%9B%E9%98%B6%EF%BC%88next%EF%BC%89">第四部分</a> )</a></li><li><a href="#38-%E4%B8%8A%E4%BC%A0%E5%88%B0github">3.8. 上传到github</a></li><li><a href="#39-%E5%B8%B8%E7%94%A8hexo%E5%91%BD%E4%BB%A4">3.9. 常用hexo命令</a></li><li><a href="#310-_configyml">3.10. _config.yml</a></li><li><a href="#311-%E5%86%99%E5%8D%9A%E5%AE%A2">3.11. 写博客</a><ul><li><a href="#3111-%E5%86%99%E5%8D%9A%E5%AE%A2%E5%B7%A5%E5%85%B7">3.11.1. 写博客工具</a></li><li><a href="#3112-%E5%A6%82%E4%BD%95%E8%AE%A9%E5%8D%9A%E6%96%87%E5%88%97%E8%A1%A8%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%85%A8%E9%83%A8%E5%86%85%E5%AE%B9">3.11.2. 如何让博文列表不显示全部内容</a></li><li><a href="#3113%E9%87%8D%E8%A6%81">3.11.3.重要！！！</a></li></ul></li></ul></li><li><a href="#4%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%BF%9B%E9%98%B6next">4.主题配置进阶（next）</a><ul><li><a href="#41%E8%AE%BE%E7%BD%AEtags-categories%E7%AD%89%E8%8F%9C%E5%8D%95%E6%A0%8F">4.1.设置tags、categories等菜单栏</a><ul><li><a href="#2-%E7%BC%96%E8%BE%91tags%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84indexmd"><strong>2、编辑tags文件夹下的index.md</strong></a></li></ul></li><li><a href="#42%E6%B7%BB%E5%8A%A0toc%E6%94%AF%E6%8C%81%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">4.2.添加Toc支持，生成文章目录</a></li><li><a href="#43%E8%AE%BE%E7%BD%AE-rss%E6%A0%B7%E5%BC%8F%E9%A3%8E%E6%A0%BC">4.3.设置 RSS(样式风格)</a></li><li><a href="#44%E8%AE%BE%E7%BD%AE%E9%98%85%E8%AF%BB%E5%85%A8%E6%96%87">4.4.设置阅读全文</a></li><li><a href="#45%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD">4.5.添加评论功能</a><ul><li><a href="#1%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9valine">1.为什么选择Valine</a></li><li><a href="#2%E7%AC%AC%E4%B8%80%E6%AD%A5%E6%B3%A8%E5%86%8Cleanclound%E8%8E%B7%E5%8F%96app-id-%E5%92%8C-app-key">2.第一步，注册LeanClound,获取APP ID 和 APP Key</a></li><li><a href="#3%E5%9C%A8hexo-next%E4%B8%BB%E9%A2%98%E4%B8%AD%E9%85%8D%E7%BD%AE">3.在Hexo Next主题中配置</a></li></ul></li><li><a href="#46%E8%AE%BE%E7%BD%AE%E5%A4%B4%E5%83%8F">4.6.设置头像</a></li><li><a href="#47%E8%AE%BE%E7%BD%AE%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6">4.7.设置文章置顶</a></li><li><a href="#48%E5%90%AF%E7%94%A8%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD">4.8.启用代码块复制功能</a></li><li><a href="#49%E6%B7%BB%E5%8A%A0-live2d-%E7%9C%8B%E6%9D%BF%E5%A8%98-%E8%90%8C%E5%AE%A0">4.9.添加 Live2D 看板娘 萌宠</a></li><li><a href="#410%E6%B7%BB%E5%8A%A0%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E6%95%88%E6%9E%9C">4.10.添加鼠标点击效果</a></li><li><a href="#411%E6%B7%BB%E5%8A%A0%E5%9B%BE%E7%89%87%E6%94%BE%E5%A4%A7%E9%A2%84%E8%A7%88%E5%8A%9F%E8%83%BD">4.11.添加图片放大预览功能</a></li><li><a href="#412%E6%B7%BB%E5%8A%A0%E9%9B%AA%E8%8A%B1%E9%A3%98%E8%90%BD%E8%83%8C%E6%99%AF%E6%95%88%E6%9E%9C">4.12.添加雪花飘落背景效果</a></li></ul><ul><li><a href="#5%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91">5.踩过的坑</a><ul><li><a href="#51%E6%B7%BB%E5%8A%A0%E4%BE%A7%E8%BE%B9%E6%A0%8F%E7%9B%AE%E5%BD%95%E5%90%8E%E7%82%B9%E5%87%BB%E6%B2%A1%E6%9C%89%E5%8F%8D%E5%BA%94">5.1.添加侧边栏目录后，点击没有反应</a></li></ul></li></ul></li></ul><!-- tocstop --><hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用github 搭建博客的好处有：</p><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li><li>可以直接托管github，而不是必须要有你的云服务器和域名</li></ol><h1 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h1><p>在开始一切之前，你必须已经：</p><ul><li>有一个github账号，没有的话去注册一个；</li><li>安装了node.js、npm，并了解相关基础知识；</li><li>安装了git for windows（或者其它git客户端）</li></ul><h1 id="2搭建github博客"><a href="#2-搭建github博客" class="headerlink" title="2.搭建github博客"></a>2.搭建github博客</h1><h2 id="21-创建仓库"><a href="#2-1-创建仓库" class="headerlink" title="2.1. 创建仓库"></a>2.1. 创建仓库</h2><p>新建一个名为<code>你的用户名.github.io</code>的仓库，比如说，如果你的github用户名是test，那么你就新建<code>test.github.io</code>的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io/">http://test.github.io</a> 了，是不是很方便？</p><p>由此可见，每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库。</p><p>几个注意的地方：</p><ol><li>注册的邮箱一定要验证，否则不会成功；</li><li>仓库名字必须是：<code>username.github.io</code>，其中<code>username</code>是你的用户名（账户名）； </li><li>仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟；</li></ol><p>创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。</p><p><img src="/2021/03/10/blog/image-20210311145848286.png"></p><h2 id="22-绑定域名可选"><a href="#2-2-绑定域名（可选）" class="headerlink" title="2.2. 绑定域名（可选）"></a>2.2. 绑定域名（可选）</h2><p>我是直接使用github的名字的，并没有使用自己的域名。</p><p>当然你也可以去弄一个，自行百度吧，很简单。</p><p>在你绑定了新域名之后，原来的<code>你的用户名.github.io</code>并没有失效，而是会自动跳转到你的新域名。</p><p>配置SSH key</p><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p><p>用git bash执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.ssh  <span class="comment">#检查本机已存在的ssh密钥</span></span><br></pre></td></tr></table></figure><p>如果提示：No such file or directory 说明你是第一次使用git。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;邮件地址&quot;</span><br><span class="line">例：ssh-keygen -t rsa -C &quot;2290280646@qq.com&quot;</span><br></pre></td></tr></table></figure><p>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\id_rsa.pub</code>文件，</p><p>可能有小伙伴不知道在哪里去找这个文件，这有何难，其实就是在你的c盘用户目录下.ssh文件夹里面</p><p><img src="/2021/03/10/blog/image-20210311150629390.png"></p><p>记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p><p>如果之前你已经填了ssh key（idea这些里面填的），建议删掉这个key，新建一个key，名字随便取，比如test，并且本地重新绑定你的github</p><p><img src="/2021/03/10/blog/20160818_143914_495_9084.png"></p><h2 id="23-测试是否成功"><a href="#2-3-测试是否成功" class="headerlink" title="2.3. 测试是否成功"></a>2.3. 测试是否成功</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com    # 注意邮箱地址不用改，直接复制粘贴就好了</span><br></pre></td></tr></table></figure><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p><blockquote><p>Hi liuxianan! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><p>看到这个信息说明SSH已配置成功！</p><p>此时你还需要配置：这个是你的github账户，用来连接时会使用到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;zhouzhe111&quot;&#x2F;&#x2F; 你的github用户名，非昵称</span><br><span class="line">$ git config --global user.email  &quot;2290280646@qq.com&quot;&#x2F;&#x2F; 填写你的github注册邮箱</span><br></pre></td></tr></table></figure><p>本地就和github连接上了</p><h1 id="3使用hexo写博客git-bash中写"><a href="#3-使用hexo写博客（git-bash中写）" class="headerlink" title="3.使用hexo写博客（git bash中写）"></a>3.使用hexo写博客（git bash中写）</h1><h2 id="31-hexo简介"><a href="#3-1-hexo简介" class="headerlink" title="3.1. hexo简介"></a>3.1. hexo简介</h2><p>Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。</p><p>官网： <a href="http://hexo.io/">http://hexo.io</a><br>github: <a href="https://github.com/hexojs/hexo">https://github.com/hexojs/hexo</a></p><h2 id="32-原理"><a href="#3-2-原理" class="headerlink" title="3.2. 原理"></a>3.2. 原理</h2><p>由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。</p><h2 id="33-注意事项"><a href="#3-3-注意事项" class="headerlink" title="3.3. 注意事项"></a>3.3. 注意事项</h2><p>安装之前先来说几个注意事项：</p><ol><li>很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用<code>git bash</code>来执行；</li><li>hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；</li><li>hexo有2种<code>_config.yml</code>文件，一个是根目录下的全局的<code>_config.yml</code>，一个是各个<code>theme</code>下的；</li></ol><h2 id="34-安装"><a href="#3-4-安装" class="headerlink" title="3.4. 安装"></a>3.4. 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure><h2 id="35-初始化"><a href="#3-5-初始化" class="headerlink" title="3.5. 初始化"></a>3.5. 初始化</h2><p>在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是<code>F:\Workspaces\hexo</code>，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /d/hexo/</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图：</p><p><img src="/2021/03/10/blog/20160818_115922_773_1148.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g <span class="comment"># 生成</span></span><br><span class="line">$ hexo s <span class="comment"># 启动服务</span></span><br></pre></td></tr></table></figure><p>执行以上命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的：</p><p><img src="/2021/03/10/blog/20160818_120700_028_2426.png"></p><p><code>hexo s</code>是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了</p><p>第一次初始化的时候hexo已经帮我们写了一篇名为 Hello World 的文章，默认的主题比较丑，打开时就是这个样子：</p><p><img src="/2021/03/10/blog/image-20210311143728099.png"></p><h2 id="36-修改主题这部分较长可先跳过主题配置进阶在-第四部分"><a href="#3-6-修改主题-这部分较长，可先跳过，主题配置进阶在-第四部分" class="headerlink" title="3.6. 修改主题(这部分较长，可先跳过，主题配置进阶在 第四部分 )"></a>3.6. 修改主题(这部分较长，可先跳过，主题配置进阶在 <a href="#4.%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%BF%9B%E9%98%B6%EF%BC%88next%EF%BC%89">第四部分</a> )</h2><p>强烈推荐 next  官网<a href="http://theme-next.iissnan.com/">http://theme-next.iissnan.com/</a></p><p>下面下载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next.git themes&#x2F;next</span><br></pre></td></tr></table></figure><p>启用主题</p><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 <strong>站点配置文件</strong>， 找到 <code>theme</code> 字段，并将其值更改为 <code>next</code>。</p><p>启用 NexT 主题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>然后重新执行<code>hexo g</code>来重新生成。</p><p>如果出现一些莫名其妙的问题，可以先执行<code>hexo clean</code>来清理一下public的内容，然后再来重新生成和发布。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  #清理缓存</span><br><span class="line">hexo g   #生成</span><br><span class="line">hexo s   #本地预览（4000端口）</span><br><span class="line">hexo d   #发布到github</span><br></pre></td></tr></table></figure><h2 id><a href="#" class="headerlink" title></a></h2><p>在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。</p><h2 id="38-上传到github"><a href="#3-8-上传到github" class="headerlink" title="3.8. 上传到github"></a>3.8. 上传到github</h2><p>如果你一切都配置好了，发布上传很容易，一句<code>hexo d</code>就搞定，当然关键还是你要把所有东西配置好。</p><p>首先，<code>ssh key</code>肯定要配置好。</p><p>其次，配置<code>_config.yml</code>中有关deploy的部分：</p><p>正确写法：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:zhouzhe111/zhouzhe111.github.io.git</span>  <span class="comment">#中间是冒号！</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span>  <span class="comment">#这个表示在你的github的那个分支下，配置文件默认是master，但是很可能你的github是main，要改成一样的</span></span><br></pre></td></tr></table></figure><p>错误写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: github</span><br><span class="line">  repository: https:&#x2F;&#x2F;github.com&#x2F;liuxianan&#x2F;liuxianan.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>后面一种写法是hexo2.x的写法，现在已经不行了，无论是哪种写法，此时直接执行<code>hexo d</code>的话一般会报如下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Deployer not found: github 或者 Deployer not found: git</span><br></pre></td></tr></table></figure><p>原因是还需要安装一个插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>其它命令不确定，部署这个命令一定要用git bash，否则会提示<code>Permission denied (publickey).</code></p><p>打开你的git bash，输入<code>hexo d</code>就会将本次有改动的代码全部提交，没有改动的不会：</p><p><img src="/2021/03/10/blog/20160818_140441_769_5024.png"></p><h2 id="39-常用hexo命令"><a href="#3-9-常用hexo命令" class="headerlink" title="3.9. 常用hexo命令"></a>3.9. 常用hexo命令</h2><p>常见命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章 默认位置在source&#x2F;_post</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面 即菜单栏</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）</span><br><span class="line">hexo deploy #部署到GitHub</span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本</span><br><span class="line">hexo clean  #清理缓存</span><br></pre></td></tr></table></figure><p>缩写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n &#x3D;&#x3D; hexo new</span><br><span class="line">hexo g &#x3D;&#x3D; hexo generate</span><br><span class="line">hexo s &#x3D;&#x3D; hexo server</span><br><span class="line">hexo d &#x3D;&#x3D; hexo deploy</span><br></pre></td></tr></table></figure><p>组合命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g #生成并本地预览</span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure><p>更新文章时一般的命令流程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  #清理缓存 如果不清理就上传，很可能不是最新的文件（缓存中的可能是以前的版本</span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure><h2 id="310-_configyml"><a href="#3-10-config-yml" class="headerlink" title="3.10. _config.yml"></a>3.10. _config.yml</h2><p>这里面都是一些全局配置，每个参数的意思都比较简单明了，所以就不作详细介绍了。</p><p>需要特别注意的地方是，冒号后面必须有一个空格，否则可能会出问题。</p><h2 id="311-写博客"><a href="#3-11-写博客" class="headerlink" title="3.11. 写博客"></a>3.11. 写博客</h2><p>定位到我们的hexo根目录，执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &#39;my-first-blog&#39;</span><br></pre></td></tr></table></figure><p>hexo会帮我们在<code>_posts</code>下生成相关md文件：</p><p><img src="/2021/03/10/blog/20160823_183047_352_1475.png"></p><p>我们只需要打开这个文件就可以开始写博客了，默认生成如下内容：</p><p><img src="/2021/03/10/blog/20160823_183325_470_9306.png"></p><p>当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。</p><p>一般完整格式如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: postName #文章页面上的显示名称，一般是中文</span><br><span class="line">date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改</span><br><span class="line">categories: 默认分类 #分类</span><br><span class="line">tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格</span><br><span class="line">description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">以下是正文</span><br></pre></td></tr></table></figure><h3 id="3111-写博客工具"><a href="#3-11-1-写博客工具" class="headerlink" title="3.11.1. 写博客工具"></a>3.11.1. 写博客工具</h3><p>我个人用的是typera <a href="https://www.typora.io/">https://www.typora.io/</a> 挺好用的</p><h3 id="3112-如何让博文列表不显示全部内容"><a href="#3-11-2-如何让博文列表不显示全部内容" class="headerlink" title="3.11.2. 如何让博文列表不显示全部内容"></a>3.11.2. 如何让博文列表不显示全部内容</h3><p>默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？</p><p>答案是在合适的位置加上<code>&lt;!--more--&gt;</code>即可，例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 前言</span></span><br><span class="line"></span><br><span class="line">使用github pages服务搭建博客的好处有：</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全是静态文件，访问速度快；</span><br><span class="line"><span class="bullet">2.</span> 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</span><br><span class="line"><span class="bullet">3.</span> 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</span><br><span class="line"></span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">4.</span> 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</span><br><span class="line"><span class="bullet">5.</span> 博客内容可以轻松打包、转移、发布到其它平台；</span><br><span class="line"><span class="bullet">6.</span> 等等；</span><br></pre></td></tr></table></figure><p>最终效果：</p><p><img src="/2021/03/10/blog/image-20210311153303575.png"></p><p>部分内容摘自 ：参考链接：<a href="http://blog.haoji.me/build-blog-website-by-hexo-github.html">使用hexo+github搭建免费个人博客详细教程</a> ，并加入了自己的一些配置</p><h3 id="3113重要"><a href="#3-11-3-重要！！！" class="headerlink" title="3.11.3.重要！！！"></a>3.11.3.重要！！！</h3><p>引入图片的路径，这是个很大的坑，本地能正常预览，可是github那里可不认账，需要好好整理一下：</p><p>首先，找到<code>_config.yml</code>配置文件<code>post_asset_folder</code>项为<code>true</code>。</p><p>这样，在使用<code>hexo new “这是一个新的博客”</code>时，会在source的 .md的位置创建同名文件夹这样你就可以把图片放在这下面了</p><p>比如你现在的文章名时是mmmm，name，图片放在mmmm文件夹中，在mmmm.md文件中你就可以这样引用图片了</p><p><code>![xxxx](mmmm/xxxx.png)</code></p><h1 id="4主题配置进阶next"><a href="#4-主题配置进阶（next）" class="headerlink" title="4.主题配置进阶（next）"></a>4.主题配置进阶（next）</h1><h3 id="41设置tags-categories等菜单栏"><a href="#4-1-设置tags、categories等菜单栏" class="headerlink" title="4.1.设置tags、categories等菜单栏"></a>4.1.设置tags、categories等菜单栏</h3><p>首先，讲讲这两个命令的区别</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new  helloworld  <span class="comment">#新建一篇文章，也就是source\_posts下的一篇篇文章</span></span><br><span class="line">hexo new page tags  <span class="comment">#新建一个菜单栏，相当于顶部导航</span></span><br></pre></td></tr></table></figure><p><img src="/2021/03/10/blog/image-20210311153803902.png"></p><p>tags 创建步骤</p><ul><li><strong>1、新建一个页面，命名为tags。命令如下：</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page tags</span><br></pre></td></tr></table></figure><blockquote><p>在/source下会新生成一个新的文件夹tags<br> ，在该文件夹下会有一个index.md文件</p></blockquote><ul><li><h4 id="2-编辑tags文件夹下的indexmd"><a href="#2、编辑tags文件夹下的index-md" class="headerlink" title="2、编辑tags文件夹下的index.md"></a><strong>2、编辑tags文件夹下的index.md</strong></h4></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2017-07-10 16:36:26</span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;tags&quot;</span>  <span class="comment">#表示这是个tags菜单栏</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li><p><strong>3、在菜单中添加链接。编辑主题的 <code>themes/next/_config.yml</code> ，添加tags到menu中，如下:</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span>  <span class="comment">#新增</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br></pre></td></tr></table></figure></li><li><p><strong>4、怎么给你的文章设置标签呢</strong></p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tags:</span> <span class="string">blog</span></span><br><span class="line"><span class="attr">tags:</span> [<span class="string">运动</span>, <span class="string">球类运动</span>]</span><br></pre></td></tr></table></figure><p>你可以按照这个流程新建 <code>about</code>、<code>categories</code>、<code>archives</code>等等</p><h3 id="42添加toc支持生成文章目录"><a href="#4-2-添加Toc支持，生成文章目录" class="headerlink" title="4.2.添加Toc支持，生成文章目录"></a>4.2.添加Toc支持，生成文章目录</h3><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-toc --save</span><br></pre></td></tr></table></figure><p>配置</p><p>在博客根目录下的 <code>_config.yml</code> 中如下配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">maxDepth:</span> <span class="number">3</span>  <span class="comment">#表示目录深度为3，即最多生成三级目录。</span></span><br></pre></td></tr></table></figure><p>然后就可以使用啦，在你想用的地方，添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;!--</span> <span class="string">toc</span> <span class="string">--&gt;</span></span><br></pre></td></tr></table></figure><p>就行了</p><h3 id="43设置-rss样式风格"><a href="#4-3-设置-RSS-样式风格" class="headerlink" title="4.3.设置 RSS(样式风格)"></a>4.3.设置 RSS(样式风格)</h3><p>NexT 中 RSS 有三个设置选项，满足特定的使用场景：</p><p>首先在站点根目录下执行下列命令安装插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>更改 主题配置文件，设定 rss 字段的值如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: url  <span class="comment">#url就是的的连接</span></span><br></pre></td></tr></table></figure><p>重新生成、启动服务器显示如下：</p><p><img src="/2021/03/10/blog/image-20210311155816806.png"></p><h3 id="44设置阅读全文"><a href="#4-4-设置阅读全文" class="headerlink" title="4.4.设置阅读全文"></a>4.4.设置阅读全文</h3><p>在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。NexT 提供三种方式来控制文章在首页的显示方式。也就是说，在首页显示文章的摘录并显示 阅读全文 按钮，可以通过以下方法实现：</p><p>使用 <code>&lt;!-- more --&gt;</code><br>在文章中嵌入 <code>&lt;!-- more --&gt;</code>标记，Hexo 会将其之上的内容作为首页预览内容，这是 Hexo 提供的方式</p><p>这个基本功一定要会，所以这儿我又重复写了一遍</p><h3 id="45添加评论功能"><a href="#4-5-添加评论功能" class="headerlink" title="4.5.添加评论功能"></a>4.5.添加评论功能</h3><p>推荐： Valine</p><h4 id="1为什么选择valine"><a href="#1-为什么选择Valine" class="headerlink" title="1.为什么选择Valine"></a>1.为什么选择Valine</h4><p>在笔者进行评论系统选择时，我觉得我的需求就是方便，简洁，最重要一点是要支持Markdown ，对比之下，最终选定了这款Valine，当然，如果你不喜欢这样简洁的，可以参考 Hexo（NexT 主题）评论系统哪个好？</p><h4 id="2第一步注册leanclound获取app-id-和-app-key"><a href="#2-第一步，注册LeanClound-获取APP-ID-和-APP-Key" class="headerlink" title="2.第一步，注册LeanClound,获取APP ID 和 APP Key"></a>2.第一步，注册LeanClound,获取APP ID 和 APP Key</h4><p>链接： <a href="https://valine.js.org/quickstart.html">https://valine.js.org/quickstart.html</a></p><p>Valine 是基于 LeanCloud 作为数据存储的，所以需要注册一个账号，注册完成后，我们找到创建应用</p><p>在这里填写你的应用名称,名称可以自己定义，然后下面选择开发版 点击创建。</p><p>然后点击应用进入设置。</p><p>然后点击设置 &gt; 安全中心 ,将除了数据存储的服务全部关闭。</p><p><img src="/2021/03/10/blog/fhsidhfsdi.png"></p><p>最后点击应用 Key 取得我们 AppKey 和 App id</p><h4 id="3在hexo-next主题中配置"><a href="#3-在Hexo-Next主题中配置" class="headerlink" title="3.在Hexo Next主题中配置"></a>3.在Hexo Next主题中配置</h4><p>首先打开 <a href="https://www.jsdelivr.com/package/npm/valine">https://www.jsdelivr.com/package/npm/valine</a> 获取最新的 valine.min.js 的cdn地址：</p><p><img src="/2021/03/10/blog/adfdaad.png"></p><p>然后我们修改主题配置文件，配置CDN：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span> <span class="string">https://cdn.jsdelivr.net/npm/valine@1.3.9/dist/Valine.min.js</span> </span><br></pre></td></tr></table></figure><p>再打开配置Valine功能：(记得修改key)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># More info available at https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line"> <span class="comment"># 功能开关</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version</span></span><br><span class="line">  <span class="attr">appid:</span>  <span class="comment"># Your leancloud application appid #LeanClound获得的appid</span></span><br><span class="line">  <span class="attr">appkey:</span>  <span class="comment"># Your leancloud application appkey #LeanClound获得的appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># Mail notifier. See: https://github.com/xCss/Valine/wiki # 邮件提醒</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code </span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">欢迎畅所欲言</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style #默认头像设置</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-cn</span> <span class="comment"># Language, available values: en, zh-cn # 语言，设为zh-cn</span></span><br><span class="line">  <span class="comment"># 是否开启当前文章阅读量统计</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors&#x27; for counter compatibility. Article reading statistic https://valine.js.org/visitor.html</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>每篇文章默认都会开启评论功能，包括about，tags这些</p><p>所以，在不需要评论的地方你可以关闭</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">about</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2021-03-10 20:24:43</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;about&quot;</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>当然， 会帮你储存、管理这些评论</p><p><img src="/2021/03/10/blog/image-20210311161651870.png"></p><p>你可以到这里，为所欲为啦（删除某个评论等等）</p><h3 id="46设置头像"><a href="#4-6-设置头像" class="headerlink" title="4.6.设置头像"></a>4.6.设置头像</h3><p>主题配置文件：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/uploads/my.jpg</span> <span class="comment">#/images/avatar.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span>  <span class="comment">#是否显示呈圆形，默认是方的</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span>  <span class="comment">#鼠标放在图片上时 是否可以旋转</span></span><br></pre></td></tr></table></figure><p>把你的图片放在/source/uploads下面（如果没有就新建文件夹</p><h3 id="47设置文章置顶"><a href="#4-7-设置文章置顶" class="headerlink" title="4.7.设置文章置顶"></a>4.7.设置文章置顶</h3><p>Hexo 默认主页文章按日期降序。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: 博客主页根路径. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: 每页显示文章数量. (0 = 禁用分页)</span></span><br><span class="line"><span class="comment"># order_by: 文章排序. (默认按日期降序)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></table></figure><p>安装 <a href="https://github.com/netcan/hexo-generator-index-pin-top">hexo-generator-index-pin-top</a></p><p>首先是卸载默认排序插件，安装新插件，新插件支持文章置顶：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><p>置顶文章</p><p>在需要置顶的文章的 <code>front-matter</code> 中设置 <code>top: 1</code> 即可实现文章置顶功能，并且数字越大文章越靠前，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">top: 1</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>添加置顶图标<br>上面置顶文章会文章排在前面，但是不会有任何有关 “置顶” 的标识。我们可以修改 NexT 主题的/themes/next/layout/_macro/post.swig 文件，在 <div class="post-meta"> 下加入 “置顶” 标识，如图标和文字描述：</div></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">%</span> <span class="string">if</span> <span class="string">post.top</span> <span class="string">%</span>&#125;</span><br><span class="line">  <span class="string">&lt;i</span> <span class="string">class=&quot;fa</span> <span class="string">fa-thumb-tack&quot;&gt;&lt;/i&gt;</span></span><br><span class="line">  <span class="string">&lt;font</span> <span class="string">color=7D26CD&gt;&#123;&#123;</span> <span class="string">__(&#x27;post.sticky&#x27;)</span> <span class="string">&#125;&#125;&lt;/font&gt;</span></span><br><span class="line">  <span class="string">&lt;span</span> <span class="string">class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="48启用代码块复制功能"><a href="#4-8-启用代码块复制功能" class="headerlink" title="4.8.启用代码块复制功能"></a>4.8.启用代码块复制功能</h3><p>编辑 <code>主题配置文件</code>，启用 <code>codeblock</code> 模块，如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Manual define the border radius in codeblock, leave it blank for the default value: 1</span></span><br><span class="line">  <span class="attr">border_radius:</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Style: only &#x27;flat&#x27; is currently available, leave it blank if you prefer default theme</span></span><br><span class="line">    <span class="attr">style:</span></span><br></pre></td></tr></table></figure><p><img src="/2021/03/10/blog/image-20210311162819748.png"></p><h3 id="49添加-live2d-看板娘-萌宠"><a href="#4-9-添加-Live2D-看板娘-萌宠" class="headerlink" title="4.9.添加 Live2D 看板娘 萌宠"></a>4.9.添加 Live2D 看板娘 萌宠</h3><p>插件 <code>hexo-helper-live2d</code> 的使用说明详见 <a href="https://github.com/EYHN/hexo-helper-live2d">https://github.com/EYHN/hexo-helper-live2d</a></p><p>Step 1</p><p>进入到工程目录下，安装 Hexo 插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-helper-live2d --save</span><br></pre></td></tr></table></figure><p>Step 2<br>在 插件作者的博客 中挑选一个模型，记录该模型的名字。模型资源名称为 live2d-widget-model-模型名称，例如选择模型 shizuku ，则其对应的 Live2D 资源名称为 live2d-widget-model-shizuku，然后直接在站点根目录下安装该模型，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-shizuku --save</span><br></pre></td></tr></table></figure><p>Step 3</p><p>编辑 <code>站点配置文件</code>，添加如下内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo plugin: hexo-helper-live2d</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># Root path of plugin to be on the site (Relative)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># JavaScript path related to plugin&#x27;s root (Relative)</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># Relative model path related to plugin&#x27;s root (Relative)</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># Default</span></span><br><span class="line">  <span class="comment">#scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">  <span class="comment">#scriptFrom: unpkg # unpkg CDN</span></span><br><span class="line">  <span class="comment">#scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # Your custom url</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># Whether only to replace live2d tag instead of inject to all pages</span></span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span> <span class="comment"># Whether to show logs in console</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-shizuku</span> <span class="comment"># npm-module package name</span></span><br><span class="line">    <span class="comment">#use: wanko # folder name in (hexo base dir)/live2d_models/</span></span><br><span class="line">    <span class="comment">#use: ./wives/wanko # folder path relative to hexo base dir</span></span><br><span class="line">    <span class="comment">#use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # Your custom url</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">hHeadPos:</span> <span class="number">0.5</span></span><br><span class="line">    <span class="attr">vHeadPos:</span> <span class="number">0.618</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">superSample:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">hOffset:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">vOffset:</span> <span class="number">-10</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">0.05</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacityDefault:</span> <span class="number">0.7</span></span><br><span class="line">    <span class="attr">opacityOnHover:</span> <span class="number">0.2</span></span><br></pre></td></tr></table></figure><p><img src="/2021/03/10/blog/image-20210311163110377.png"></p><p>默认在页面右下角，上面的参数也可以自己调整</p><p>个人还喜欢的动图</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">可选：Epsilon2.1</span> <span class="string">nipsilon</span> <span class="string">z16</span> <span class="string">hibiki</span></span><br><span class="line"><span class="string">使用</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">live2d-widget-model-shizuku</span> <span class="string">--save</span> <span class="string">安装</span></span><br></pre></td></tr></table></figure><h3 id="410添加鼠标点击效果"><a href="#4-10-添加鼠标点击效果" class="headerlink" title="4.10.添加鼠标点击效果"></a>4.10.添加鼠标点击效果</h3><p>这个其实还比较简单，只需要在主题目录下<code>next/source/js/src</code>下面新建一个<code>clicklove.js</code>文件，当然名字可以自己任取，然后在其中加入以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*网页鼠标点击特效（爱心）*/</span></span><br><span class="line">!<span class="function"><span class="keyword">function</span> (<span class="params">e, t, a</span>) </span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>) </span>&#123;<span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; s.length; e++) s[e].alpha &lt;= <span class="number">0</span> ? (t.body.removeChild(s[e].el), s.splice(e, <span class="number">1</span>)) : (s[e].y--, s[e].scale += <span class="number">.004</span>, s[e].alpha -= <span class="number">.013</span>, s[e].el.style.cssText = <span class="string">&quot;left:&quot;</span> + s[e].x + <span class="string">&quot;px;top:&quot;</span> + s[e].y + <span class="string">&quot;px;opacity:&quot;</span> + s[e].alpha + <span class="string">&quot;;transform:scale(&quot;</span> + s[e].scale + <span class="string">&quot;,&quot;</span> + s[e].scale + <span class="string">&quot;) rotate(45deg);background:&quot;</span> + s[e].color + <span class="string">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>) </span>&#123;<span class="keyword">var</span> t = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> e.onclick &amp;&amp; e.onclick;e.onclick = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;t &amp;&amp; t(), o(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">e</span>) </span>&#123;<span class="keyword">var</span> a = t.createElement(<span class="string">&quot;div&quot;</span>);a.className = <span class="string">&quot;heart&quot;</span>, s.push(&#123;<span class="attr">el</span>: a,<span class="attr">x</span>: e.clientX - <span class="number">5</span>,<span class="attr">y</span>: e.clientY - <span class="number">5</span>,<span class="attr">scale</span>: <span class="number">1</span>,<span class="attr">alpha</span>: <span class="number">1</span>,<span class="attr">color</span>: c()&#125;), t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>) </span>&#123;<span class="keyword">var</span> a = t.createElement(<span class="string">&quot;style&quot;</span>);a.type = <span class="string">&quot;text/css&quot;</span>;<span class="keyword">try</span> &#123;a.appendChild(t.createTextNode(e))&#125; <span class="keyword">catch</span> (t) &#123;a.styleSheet.cssText = e&#125;t.getElementsByTagName(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params"></span>) </span>&#123;<span class="keyword">return</span> <span class="string">&quot;rgb(&quot;</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">&quot;,&quot;</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">&quot;,&quot;</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">&quot;)&quot;</span>&#125;<span class="keyword">var</span> s = [];e.requestAnimationFrame = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;<span class="built_in">setTimeout</span>(e, <span class="number">1e3</span> / <span class="number">60</span>)&#125;, i(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>), n(), r()&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面这个是鼠标点击出现小心心的文件，也可以加上鼠标点击出现社会主义核心价值观的js文件，如果只想要一个就只加一个文件即可，在刚才的目录下继续创建<code>clicksocialvalue.js</code>文件，然后在文件中加入以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> coreSocialistValues = [<span class="string">&quot;富强&quot;</span>, <span class="string">&quot;民主&quot;</span>, <span class="string">&quot;文明&quot;</span>, <span class="string">&quot;和谐&quot;</span>, <span class="string">&quot;自由&quot;</span>, <span class="string">&quot;平等&quot;</span>, <span class="string">&quot;公正&quot;</span>, <span class="string">&quot;法治&quot;</span>, <span class="string">&quot;爱国&quot;</span>, <span class="string">&quot;敬业&quot;</span>, <span class="string">&quot;诚信&quot;</span>, <span class="string">&quot;友善&quot;</span>],</span><br><span class="line">    index = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * coreSocialistValues.length);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">document</span>.body.addEventListener(<span class="string">&#x27;click&#x27;</span>,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//过滤a标签</span></span><br><span class="line">        <span class="keyword">if</span> (e.target.tagName == <span class="string">&#x27;A&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> x = e.pageX,</span><br><span class="line">        y = e.pageY,</span><br><span class="line">        span = <span class="built_in">document</span>.createElement(<span class="string">&#x27;span&#x27;</span>);</span><br><span class="line">        span.textContent = coreSocialistValues[index];</span><br><span class="line">        index = (index + <span class="number">1</span>) % coreSocialistValues.length;</span><br><span class="line">        span.style.cssText = [<span class="string">&#x27;z-index: 9999999; position: absolute; font-weight: bold; color: #ff6651; top: &#x27;</span>, y - <span class="number">20</span>, <span class="string">&#x27;px; left: &#x27;</span>, x, <span class="string">&#x27;px;&#x27;</span>].join(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(span);</span><br><span class="line">        animate(span);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>当然如果两个都需要的话，可以直接将两个文件的代码合并到一个文件即可。</p><p>然后在主题目录下<code>next/layout/_layout.swig</code>文件中的<code>&lt;body&gt;&lt;/body&gt;</code>体标签内引入刚才创建的js文件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/src/clicklove.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/src/clicksocialvalue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/03/10/blog/image-20210311164038387.png"></p><h3 id="411添加图片放大预览功能"><a href="#4-11-添加图片放大预览功能" class="headerlink" title="4.11.添加图片放大预览功能"></a>4.11.添加图片放大预览功能</h3><p>利用 Fancybox 能放大查看图片。</p><p>有 <a href="https://github.com/theme-next/theme-next-fancybox">Fancybox2</a> 和 <a href="https://github.com/theme-next/theme-next-fancybox3">Fancybox3</a> 两个版本，这里使用 Fancybox3。</p><p>如果已经有 fancybox2 的，需要在站点根目录下执行下列命令进行删除：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf themes/next/<span class="built_in">source</span>/lib/fancybox</span><br></pre></td></tr></table></figure><p>进入到 <code>themes/next</code> 主题目录下，执行以下命令安装 fancybox3 模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-fancybox3 <span class="built_in">source</span>/lib/fancybox</span><br></pre></td></tr></table></figure><p>编辑 <code>主题配置文件</code>，启用 fancybox，修改配置如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/2021/03/10/blog/image-20210311163717656.png"></p><h3 id="412添加雪花飘落背景效果"><a href="#4-12-添加雪花飘落背景效果" class="headerlink" title="4.12.添加雪花飘落背景效果"></a>4.12.添加雪花飘落背景效果</h3><p>在\blog\themes\next\source\js目录下新建snow2.js文件，添加如下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*样式一*/</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">    $.fn.snow = <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $flake = $(<span class="string">&#x27;&lt;div id=&quot;snowbox&quot; /&gt;&#x27;</span>).css(&#123;</span><br><span class="line">                <span class="string">&#x27;position&#x27;</span>: <span class="string">&#x27;absolute&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;z-index&#x27;</span>: <span class="string">&#x27;9999&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;top&#x27;</span>: <span class="string">&#x27;-50px&#x27;</span></span><br><span class="line">            &#125;).html(<span class="string">&#x27;❄&#x27;</span>),</span><br><span class="line">            documentHeight = $(<span class="built_in">document</span>).height(),</span><br><span class="line">            documentWidth = $(<span class="built_in">document</span>).width(),</span><br><span class="line">            defaults = &#123;</span><br><span class="line">                minSize: <span class="number">10</span>,</span><br><span class="line">                maxSize: <span class="number">20</span>,</span><br><span class="line">                newOn: <span class="number">1000</span>,</span><br><span class="line">                flakeColor: <span class="string">&quot;#AFDAEF&quot;</span> <span class="comment">/* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */</span></span><br><span class="line">            &#125;,</span><br><span class="line">            options = $.extend(&#123;&#125;, defaults, options);</span><br><span class="line">        <span class="keyword">var</span> interval = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> startPositionLeft = <span class="built_in">Math</span>.random() * documentWidth - <span class="number">100</span>,</span><br><span class="line">                startOpacity = <span class="number">0.5</span> + <span class="built_in">Math</span>.random(),</span><br><span class="line">                sizeFlake = options.minSize + <span class="built_in">Math</span>.random() * options.maxSize,</span><br><span class="line">                endPositionTop = documentHeight - <span class="number">200</span>,</span><br><span class="line">                endPositionLeft = startPositionLeft - <span class="number">500</span> + <span class="built_in">Math</span>.random() * <span class="number">500</span>,</span><br><span class="line">                durationFall = documentHeight * <span class="number">10</span> + <span class="built_in">Math</span>.random() * <span class="number">5000</span>;</span><br><span class="line">            $flake.clone().appendTo(<span class="string">&#x27;body&#x27;</span>).css(&#123;</span><br><span class="line">                left: startPositionLeft,</span><br><span class="line">                opacity: startOpacity,</span><br><span class="line">                <span class="string">&#x27;font-size&#x27;</span>: sizeFlake,</span><br><span class="line">                color: options.flakeColor</span><br><span class="line">            &#125;).animate(&#123;</span><br><span class="line">                top: endPositionTop,</span><br><span class="line">                left: endPositionLeft,</span><br><span class="line">                opacity: <span class="number">0.2</span></span><br><span class="line">            &#125;, durationFall, <span class="string">&#x27;linear&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="built_in">this</span>).remove()</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;, options.newOn);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)(jQuery);</span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.fn.snow(&#123;</span><br><span class="line">        minSize: <span class="number">5</span>,</span><br><span class="line">        <span class="comment">/* 定义雪花最小尺寸 */</span></span><br><span class="line">        maxSize: <span class="number">50</span>,</span><br><span class="line">        <span class="comment">/* 定义雪花最大尺寸 */</span></span><br><span class="line">        newOn: <span class="number">300</span> <span class="comment">/* 定义密集程度，数字越小越密集 */</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在\blog\themes\next\layout_layout.swig中添加如下代码（文件最后添加即可）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 雪花特效2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/snow2.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在\blog\themes\next_config.yml下添加如下代码（文件最后添加即可）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 雪花特效2</span></span><br><span class="line"><span class="attr">snow2:</span> </span><br><span class="line"> <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>如果你已经引入jQuery，请忽略这一步(我本来没有引入但是引入了之后报错，不引入却正常，建议先不要引入看看能不能正常运行)</p><p>在第3步中，\blog\themes\next\layout_layout.swig文件中已经引入了snow2.js，需要在这之前引入jQuery，添加代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入jQuery --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//libs.baidu.com/jquery/1.8.3/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果想要无齿轮的雪花效果，将snow2.js中的代码替换为下面的代码即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*样式二*/</span></span><br><span class="line"><span class="comment">/* 控制下雪 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">snowFall</span>(<span class="params">snow</span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* 可配置属性 */</span></span><br><span class="line">    snow = snow || &#123;&#125;;</span><br><span class="line">    <span class="built_in">this</span>.maxFlake = snow.maxFlake || <span class="number">200</span>; <span class="comment">/* 最多片数 */</span></span><br><span class="line">    <span class="built_in">this</span>.flakeSize = snow.flakeSize || <span class="number">10</span>; <span class="comment">/* 雪花形状 */</span></span><br><span class="line">    <span class="built_in">this</span>.fallSpeed = snow.fallSpeed || <span class="number">1</span>; <span class="comment">/* 坠落速度 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 兼容写法 */</span></span><br><span class="line">requestAnimationFrame = <span class="built_in">window</span>.requestAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.mozRequestAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.webkitRequestAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.msRequestAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.oRequestAnimationFrame ||</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params">callback</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(callback, <span class="number">1000</span> / <span class="number">60</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">cancelAnimationFrame = <span class="built_in">window</span>.cancelAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.mozCancelAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.webkitCancelAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.msCancelAnimationFrame ||</span><br><span class="line">    <span class="built_in">window</span>.oCancelAnimationFrame;</span><br><span class="line"><span class="comment">/* 开始下雪 */</span></span><br><span class="line">snowFall.prototype.start = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* 创建画布 */</span></span><br><span class="line">    snowCanvas.apply(<span class="built_in">this</span>);</span><br><span class="line">    <span class="comment">/* 创建雪花形状 */</span></span><br><span class="line">    createFlakes.apply(<span class="built_in">this</span>);</span><br><span class="line">    <span class="comment">/* 画雪 */</span></span><br><span class="line">    drawSnow.apply(<span class="built_in">this</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 创建画布 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">snowCanvas</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* 添加Dom结点 */</span></span><br><span class="line">    <span class="keyword">var</span> snowcanvas = <span class="built_in">document</span>.createElement(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">    snowcanvas.id = <span class="string">&quot;snowfall&quot;</span>;</span><br><span class="line">    snowcanvas.width = <span class="built_in">window</span>.innerWidth;</span><br><span class="line">    snowcanvas.height = <span class="built_in">document</span>.body.clientHeight;</span><br><span class="line">    snowcanvas.setAttribute(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;&quot;</span>);</span><br><span class="line">    <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;body&quot;</span>)[<span class="number">0</span>].appendChild(snowcanvas);</span><br><span class="line">    <span class="built_in">this</span>.canvas = snowcanvas;</span><br><span class="line">    <span class="built_in">this</span>.ctx = snowcanvas.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">    <span class="comment">/* 窗口大小改变的处理 */</span></span><br><span class="line">    <span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        snowcanvas.width = <span class="built_in">window</span>.innerWidth;</span><br><span class="line">        <span class="comment">/* snowcanvas.height = window.innerHeight */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 雪运动对象 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">flakeMove</span>(<span class="params">canvasWidth, canvasHeight, flakeSize, fallSpeed</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.x = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * canvasWidth); <span class="comment">/* x坐标 */</span></span><br><span class="line">    <span class="built_in">this</span>.y = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * canvasHeight); <span class="comment">/* y坐标 */</span></span><br><span class="line">    <span class="built_in">this</span>.size = <span class="built_in">Math</span>.random() * flakeSize + <span class="number">2</span>; <span class="comment">/* 形状 */</span></span><br><span class="line">    <span class="built_in">this</span>.maxSize = flakeSize; <span class="comment">/* 最大形状 */</span></span><br><span class="line">    <span class="built_in">this</span>.speed = <span class="built_in">Math</span>.random() * <span class="number">1</span> + fallSpeed; <span class="comment">/* 坠落速度 */</span></span><br><span class="line">    <span class="built_in">this</span>.fallSpeed = fallSpeed; <span class="comment">/* 坠落速度 */</span></span><br><span class="line">    <span class="built_in">this</span>.velY = <span class="built_in">this</span>.speed; <span class="comment">/* Y方向速度 */</span></span><br><span class="line">    <span class="built_in">this</span>.velX = <span class="number">0</span>; <span class="comment">/* X方向速度 */</span></span><br><span class="line">    <span class="built_in">this</span>.stepSize = <span class="built_in">Math</span>.random() / <span class="number">30</span>; <span class="comment">/* 步长 */</span></span><br><span class="line">    <span class="built_in">this</span>.step = <span class="number">0</span> <span class="comment">/* 步数 */</span></span><br><span class="line">&#125;</span><br><span class="line">flakeMove.prototype.update = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="built_in">this</span>.x,</span><br><span class="line">        y = <span class="built_in">this</span>.y;</span><br><span class="line">    <span class="comment">/* 左右摆动(余弦) */</span></span><br><span class="line">    <span class="built_in">this</span>.velX *= <span class="number">0.98</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.velY &lt;= <span class="built_in">this</span>.speed) &#123;</span><br><span class="line">        <span class="built_in">this</span>.velY = <span class="built_in">this</span>.speed</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.velX += <span class="built_in">Math</span>.cos(<span class="built_in">this</span>.step += <span class="number">.05</span>) * <span class="built_in">this</span>.stepSize;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.y += <span class="built_in">this</span>.velY;</span><br><span class="line">    <span class="built_in">this</span>.x += <span class="built_in">this</span>.velX;</span><br><span class="line">    <span class="comment">/* 飞出边界的处理 */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.x &gt;= canvas.width || <span class="built_in">this</span>.x &lt;= <span class="number">0</span> || <span class="built_in">this</span>.y &gt;= canvas.height || <span class="built_in">this</span>.y &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">this</span>.reset(canvas.width, canvas.height)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/* 飞出边界-放置最顶端继续坠落 */</span></span><br><span class="line">flakeMove.prototype.reset = <span class="function"><span class="keyword">function</span> (<span class="params">width, height</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.x = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * width);</span><br><span class="line">    <span class="built_in">this</span>.y = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.size = <span class="built_in">Math</span>.random() * <span class="built_in">this</span>.maxSize + <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">this</span>.speed = <span class="built_in">Math</span>.random() * <span class="number">1</span> + <span class="built_in">this</span>.fallSpeed;</span><br><span class="line">    <span class="built_in">this</span>.velY = <span class="built_in">this</span>.speed;</span><br><span class="line">    <span class="built_in">this</span>.velX = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 渲染雪花-随机形状（此处可修改雪花颜色！！！）</span></span><br><span class="line">flakeMove.prototype.render = <span class="function"><span class="keyword">function</span> (<span class="params">ctx</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> snowFlake = ctx.createRadialGradient(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="number">0</span>, <span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.size);</span><br><span class="line">    snowFlake.addColorStop(<span class="number">0</span>, <span class="string">&quot;rgba(255, 255, 255, 0.9)&quot;</span>); <span class="comment">/* 此处是雪花颜色，默认是白色 */</span></span><br><span class="line">    snowFlake.addColorStop(<span class="number">.5</span>, <span class="string">&quot;rgba(255, 255, 255, 0.5)&quot;</span>); <span class="comment">/* 若要改为其他颜色，请自行查 */</span></span><br><span class="line">    snowFlake.addColorStop(<span class="number">1</span>, <span class="string">&quot;rgba(255, 255, 255, 0)&quot;</span>); <span class="comment">/* 找16进制的RGB 颜色代码。 */</span></span><br><span class="line">    ctx.save();</span><br><span class="line">    ctx.fillStyle = snowFlake;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.arc(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.size, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>);</span><br><span class="line">    ctx.fill();</span><br><span class="line">    ctx.restore();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/* 创建雪花-定义形状 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createFlakes</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> maxFlake = <span class="built_in">this</span>.maxFlake,</span><br><span class="line">        flakes = <span class="built_in">this</span>.flakes = [],</span><br><span class="line">        canvas = <span class="built_in">this</span>.canvas;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; maxFlake; i++) &#123;</span><br><span class="line">        flakes.push(<span class="keyword">new</span> flakeMove(canvas.width, canvas.height, <span class="built_in">this</span>.flakeSize, <span class="built_in">this</span>.fallSpeed))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 画雪 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawSnow</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> maxFlake = <span class="built_in">this</span>.maxFlake,</span><br><span class="line">        flakes = <span class="built_in">this</span>.flakes;</span><br><span class="line">    ctx = <span class="built_in">this</span>.ctx, canvas = <span class="built_in">this</span>.canvas, that = <span class="built_in">this</span>;</span><br><span class="line">    <span class="comment">/* 清空雪花 */</span></span><br><span class="line">    ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; maxFlake; e++) &#123;</span><br><span class="line">        flakes[e].update();</span><br><span class="line">        flakes[e].render(ctx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*  一帧一帧的画 */</span></span><br><span class="line">    <span class="built_in">this</span>.loop = requestAnimationFrame(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        drawSnow.apply(that);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 调用及控制方法 */</span></span><br><span class="line"><span class="keyword">var</span> snow = <span class="keyword">new</span> snowFall(&#123;</span><br><span class="line">    maxFlake: <span class="number">60</span></span><br><span class="line">&#125;);</span><br><span class="line">snow.start();</span><br></pre></td></tr></table></figure><p><img src="/2021/03/10/blog/image-20210311164406749.png"></p><p>如果你一步不跳到了这里，那我相信你已经熟悉了基本的修改流程，如果你还想增加一些高级效果，请自行百度，我这里就不多写了，当然我还加了不少别的东西，但我感觉不是很必要，所以就没有写进来了。</p><p>可参考链接：Hexo 个人博客 NexT 主题进阶配置<a href="https://blog.csdn.net/qq_32767041/article/details/103284412">https://blog.csdn.net/qq_32767041/article/details/103284412</a></p><h2 id="5踩过的坑"><a href="#5-踩过的坑" class="headerlink" title="5.踩过的坑"></a>5.踩过的坑</h2><h3 id="51添加侧边栏目录后点击没有反应"><a href="#5-1-添加侧边栏目录后，点击没有反应" class="headerlink" title="5.1.添加侧边栏目录后，点击没有反应"></a>5.1.添加侧边栏目录后，点击没有反应</h3><p><img src="/2021/03/10/blog/image-20210311192727706.png"></p><p>点击目录审查元素</p><p><img src="/2021/03/10/blog/image-20210311192823128.png"></p><p>经过简单的排查，发现现在编译出的 HTML 内容中，如下的 markdown 标题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## title</span><br></pre></td></tr></table></figure><p>原来会被编译成 <code>&lt;h2 id=&quot;title&quot;&gt;title&lt;/h2&gt;</code></p><p>而现在会被编译成 <code>&lt;h2&gt;&lt;span id=&quot;title&quot;&gt;title&lt;/span&gt;&lt;/h2&gt;</code>，这正是问题出现的原因，前后不匹配，所以js拿不到该拿的值</p><p>于是我找遍网上大神，找到了 <a href="https://convivae.top/posts/hexo-bo-ke-cai-keng/#%E6%96%B9%E6%B3%95-2">https://convivae.top/posts/hexo-bo-ke-cai-keng/#%E6%96%B9%E6%B3%95-2</a></p><p>推测因此导致了生成 TOC 时，H2 元素的 id 属性为未定义，进而导致 TOC 中的锚点也为未定义的问题。</p><p>以上的变更，是包 hexo-toc 的变更导致的，具体应该是这次<a href="https://github.com/bubkoo/hexo-toc/blob/7c9624c2d3fb7d13ce973cb8de4dc10ff865c089/lib/filter.js#L28">提交</a>。</p><p>但是目前仅仅是初步排查，暂时没有确定问题就是出在 hexo-toc 上，仅仅是认为这个修改可能会导致后续某些生成 toc 的代码的不兼容。</p><p>因此目前阶段，进入你项目根目录的 <code>node_modules\hexo-toc\lib\filter.js</code> 中，把 28 行～31 行修改为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$title.attr(<span class="string">&#x27;id&#x27;</span>, id);</span><br><span class="line"><span class="comment">// $title.children(&#x27;a&#x27;).remove();</span></span><br><span class="line"><span class="comment">// $title.html( &#x27;&lt;span id=&quot;&#x27; + id + &#x27;&quot;&gt;&#x27; + $title.html() + &#x27;&lt;/span&gt;&#x27; );</span></span><br><span class="line"><span class="comment">// $title.removeAttr(&#x27;id&#x27;);</span></span><br></pre></td></tr></table></figure><p>而原来是】</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// $title.attr(&#x27;id&#x27;, id);</span></span><br><span class="line">$title.children(<span class="string">&#x27;a&#x27;</span>).remove();</span><br><span class="line">$title.html( <span class="string">&#x27;&lt;span id=&quot;&#x27;</span> + id + <span class="string">&#x27;&quot;&gt;&#x27;</span> + $title.html() + <span class="string">&#x27;&lt;/span&gt;&#x27;</span> );</span><br><span class="line">$title.removeAttr(<span class="string">&#x27;id&#x27;</span>);</span><br></pre></td></tr></table></figure><p>前后呼应，问题解决</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;强烈推荐！！！使用hexo，基于gitgub搭建你想要的博客。Hexo 是一个快速、简洁且高效的博客框架。&lt;/p&gt;</summary>
    
    
    
    <category term="blog" scheme="http://zhouzhe111.github.io/categories/blog/"/>
    
    
  </entry>
  
  <entry>
    <title>springcloud1</title>
    <link href="http://zhouzhe111.github.io/2021/03/09/springcloud1/"/>
    <id>http://zhouzhe111.github.io/2021/03/09/springcloud1/</id>
    <published>2021-03-09T11:43:13.000Z</published>
    <updated>2021-04-09T11:44:57.242Z</updated>
    
    <content type="html"><![CDATA[<p>springcloud 简单入门。以及基本组件的使用。</p><span id="more"></span><hr><!-- toc --><ul><li><a href="#%E5%89%8D%E8%A8%80">前言</a></li><li><a href="#1-springcloud-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA">1、springcloud 环境搭建</a><ul><li><a href="#11-%E7%88%B6%E5%B7%A5%E7%A8%8Bproject">1.1、父工程（project）</a><ul><li><a href="#111-%E7%8E%AF%E5%A2%83">1.1.1、环境</a><ul><li><a href="#1111-site%E9%AA%A8%E6%9E%B6jdk8">1.1.1.1、site骨架，jdk8</a></li><li><a href="#1112-%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F%E9%80%89%E6%8B%A9utf8%E5%A6%82%E6%9E%9C%E5%87%BA%E7%8E%B0%E9%97%AE%E9%A2%98%E4%BC%9A%E5%BE%88%E9%BA%BB%E7%83%A6">1.1.1.2、编码格式选择utf8，如果出现问题会很麻烦</a></li><li><a href="#1113-%E5%BC%80%E5%90%AF%E6%B3%A8%E8%A7%A3%E7%94%9F%E6%95%88%E6%BF%80%E6%B4%BB">1.1.1.3、开启注解生效激活</a></li><li><a href="#1114-java%E7%BC%96%E8%AF%91%E9%80%89%E6%8B%A918%E9%BB%98%E8%AE%A4%E7%9A%84%E4%BD%8E%E7%89%88%E6%9C%AC%E4%BC%9A%E5%AF%BC%E8%87%B4%E5%87%BA%E9%94%99%E6%AF%94%E5%A6%82jdk6%E4%B8%8D%E6%94%AF%E6%8C%81%E6%8E%A5%E5%8F%A3%E7%9A%84%E7%BB%A7%E6%89%BFoverride">1.1.1.4、java编译选择1.8，默认的低版本会导致出错（比如jdk6不支持接口的继承@Override</a></li><li><a href="#1115-%E9%80%89%E5%81%9A%E4%B8%8D%E6%98%BE%E7%A4%BA-idea-%E7%AD%89%E7%94%A8%E4%B8%8D%E5%88%B0%E7%9A%84%E6%96%87%E4%BB%B6-%E5%8F%AF%E4%BB%A5%E5%9C%A8%E4%B8%8B%E9%9D%A2-%E6%B7%BB%E5%8A%A0-ideaiml">1.1.1.5、（选做）不显示 .idea 等用不到的文件  可以在下面  添加    *.idea;*.iml;</a></li></ul></li><li><a href="#112-pom%E9%85%8D%E7%BD%AE">1.1.2、pom配置</a><ul><li><a href="#1121-%E8%BF%99%E6%98%AF%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E6%97%B6%E4%BA%A7%E7%94%9F%E7%9A%84">1.1.2.1、这是创建项目时产生的</a></li><li><a href="#1122-%E9%9C%80%E8%A6%81%E6%B7%BB%E5%8A%A0%E7%9A%84">1.1.2.2、需要添加的</a></li></ul></li><li><a href="#113-%E8%B7%B3%E8%BF%87%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95">1.1.3、跳过单元测试</a></li><li><a href="#114-%E9%80%89%E5%8F%AF%E4%BB%A5%E5%88%A0%E9%99%A4%E7%88%B6%E5%B7%A5%E7%A8%8B%E7%9A%84src%E6%96%87%E4%BB%B6%E5%A4%B9%E7%94%A8%E4%B8%8D%E5%88%B0">1.1.4、（选）可以删除父工程的src文件夹（用不到）</a></li></ul></li><li><a href="#12-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A8%A1%E5%9D%97">1.2、微服务模块</a><ul><li><a href="#121-%E9%80%89%E4%B8%AD%E7%88%B6%E5%B7%A5%E7%A8%8B%E5%8F%B3%E9%94%AE%E6%96%B0%E5%BB%BAmodulejdk8%E5%88%AB%E5%BF%98%E4%BA%86">1.2.1、选中父工程，右键新建module，jdk8别忘了</a></li><li><a href="#122-%E5%A1%AB%E5%86%99%E5%90%8D%E5%AD%97finish">1.2.2、填写名字，finish</a></li><li><a href="#123-%E6%B7%BB%E5%8A%A0%E4%BE%9D%E8%B5%96">1.2.3、添加依赖</a></li><li><a href="#124-%E5%86%99yml-%E6%88%96%E8%80%85-properties">1.2.4、写YML 或者   properties</a></li><li><a href="#125-%E5%90%AF%E5%8A%A8%E7%B1%BB">1.2.5、启动类</a></li><li><a href="#126-%E4%B8%9A%E5%8A%A1%E7%B1%BB">1.2.6、业务类</a><ul><li><a href="#1261-%E5%BB%BA%E8%A1%A8sql">1.2.6.1、建表SQL</a></li><li><a href="#1262-entities">1.2.6.2、entities</a><ul><li><a href="#12621-payment%E5%AE%9E%E4%BD%93%E7%B1%BB">1.2.6.2.1、Payment实体类</a></li><li><a href="#12622-commonresult%E5%B0%81%E8%A3%85%E7%B1%BB%E7%94%A8%E4%BA%8E%E8%BF%94%E5%9B%9E%E7%BB%99%E5%89%8D%E7%AB%AF%E7%9A%84%E6%95%B0%E6%8D%AE%E4%BF%A1%E6%81%AF%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB">1.2.6.2.2、CommonResult封装类，用于返回给前端的数据信息（前后端分离）</a></li></ul></li><li><a href="#1263-dao%E7%B1%BB-%E4%BD%BF%E7%94%A8mapper%E6%B3%A8%E8%A7%A3%E6%8A%8A%E8%BF%99%E4%B8%AAdao%E4%BA%A4%E7%B5%A6spring%E7%AE%A1%E7%90%86">1.2.6.3、dao类 使用@Mapper注解，把这个DAO交給Spring管理</a></li><li><a href="#1264-service">1.2.6.4、Service</a><ul><li><a href="#12641-paymentservice%E6%8E%A5%E5%8F%A3">1.2.6.4.1、PaymentService接口</a></li><li><a href="#12642-paymentserviceimpl%E5%AE%9E%E7%8E%B0%E7%B1%BB%E7%BB%A7%E6%89%BFpaymentservice%E6%8E%A5%E5%8F%A3">1.2.6.4.2、PaymentServiceImpl实现类，继承PaymentService接口</a></li></ul></li><li><a href="#1265-mapperxml">1.2.6.5、mapper.xml</a></li><li><a href="#1266-%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E7%BB%93%E6%9E%84%E5%9B%BE">1.2.6.6、项目模块结构图</a></li><li><a href="#1267-%E5%8F%AF%E4%BB%A5%E8%BF%9B%E8%A1%8C%E7%AE%80%E5%8D%95%E6%B5%8B%E8%AF%95">1.2.6.7、可以进行简单测试</a><ul><li><a href="#12671-run">1.2.6.7.1、run</a></li><li><a href="#12672-%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BE%93%E5%85%A5-%E8%BF%9B%E8%A1%8Cget%E6%B5%8B%E8%AF%95">1.2.6.7.2、浏览器输入 进行get测试</a></li><li><a href="#image-20200807181049821cusersmsi-nbappdataroamingtyporatypora-user-imagesimage-20200807181049821png"><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807181049821.png" alt="image-20200807181049821"></a></li><li><a href="#12673-%E4%BD%BF%E7%94%A8postman-%E8%BF%9B%E8%A1%8Ccreate%E6%B5%8B%E8%AF%95postmapping">1.2.6.7.3、使用postman 进行create测试，PostMapping</a></li></ul></li></ul></li></ul></li></ul></li><li><a href="#2-springcloud%E5%85%A5%E9%97%A8">2、springcloud入门</a><ul><li><a href="#21-%E7%83%AD%E9%83%A8%E7%BD%B2">2.1、热部署</a><ul><li><a href="#211-%E4%BE%9D%E8%B5%96">2.1.1、依赖</a></li><li><a href="#212-maven%E6%8F%92%E4%BB%B6">2.1.2、maven插件</a></li><li><a href="#213-%E5%BC%80%E5%90%AF%E8%87%AA%E5%8A%A8%E7%BC%96%E8%AF%91%E7%9A%84%E9%80%89%E9%A1%B9">2.1.3、开启自动编译的选项</a></li><li><a href="#214-ctrlshiftalt-%E9%80%89%E6%8B%A9registry">2.1.4、ctrl+shift+alt+/ 选择registry</a></li><li><a href="#215-%E5%8B%BE%E4%B8%8A-%E8%BF%99%E4%B8%A4%E4%B8%AA">2.1.5、勾上 这两个</a></li><li><a href="#216-%E7%83%AD%E9%83%A8%E7%BD%B2-%E5%8F%AA%E5%85%81%E8%AE%B8%E5%9C%A8%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5%E4%BD%BF%E7%94%A8%E6%9C%AC%E8%BA%AB%E5%B0%B1%E6%98%AF%E4%B8%BA%E4%BA%86%E4%BD%BF%E5%BC%80%E5%8F%91%E7%AE%80%E4%BE%BF%E8%80%8C%E5%87%BA%E7%8E%B0%E7%9A%84%E4%B8%8A%E7%BA%BF%E6%97%B6%E5%BA%94%E8%AF%A5%E5%85%B3%E9%97%AD%E8%BF%99%E4%B8%AA%E5%8A%9F%E8%83%BD">2.1.6、热部署 只允许在开发阶段使用（本身就是为了使开发简便而出现的），上线时应该关闭这个功能</a></li></ul></li><li><a href="#22-run-dashboard-%E6%88%96%E8%80%85-services-%E6%80%BB%E6%8E%A7%E5%88%B6%E5%8F%B0">2.2、run dashboard   或者   services   总控制台</a></li><li><a href="#23-cloud-consumer-order80-%E8%AE%A2%E5%8D%95%E6%A8%A1%E5%9D%97">2.3、cloud-consumer-order80 订单模块</a><ul><li><a href="#231-pom">2.3.1、pom</a></li><li><a href="#232-ordermain80-%E4%B8%BB%E5%90%AF%E5%8A%A8%E7%B1%BB">2.3.2、OrderMain80 主启动类</a></li><li><a href="#233-yml">2.3.3、yml</a></li><li><a href="#234-config-%E9%85%8D%E7%BD%AE-resttemplate-%E8%BF%9B%E8%A1%8C%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8">2.3.4、Config 配置 RestTemplate 进行远程调用</a></li><li><a href="#235-entities-%E5%A4%8D%E5%88%B6%E8%BF%87%E6%9D%A5">2.3.5、entities 复制过来</a></li><li><a href="#236-controller">2.3.6、controller</a></li></ul></li><li><a href="#24-%E5%88%9B%E5%BB%BA%E5%85%AC%E5%85%B1%E6%A8%A1%E5%9D%97">2.4、创建公共模块</a><ul><li><a href="#241-pom">2.4.1、pom</a></li><li><a href="#242-entities-%E7%B2%98%E8%B4%B4%E8%BF%87%E6%9D%A5">2.4.2、entities 粘贴过来</a></li><li><a href="#243-maven-%E5%91%BD%E4%BB%A4-clean-install">2.4.3、maven 命令 clean  install</a><ul><li><a href="#2431-%E9%80%89%E4%B8%AD-cloud-api-common-%E6%A8%A1%E5%9D%97-%E7%82%B9%E5%87%BBmaven-clean">2.4.3.1、选中 cloud-api-common  模块  ，点击maven  ，clean</a></li><li><a href="#2432-install">2.4.3.2、install</a></li></ul></li><li><a href="#244-%E5%88%A0%E9%99%A4-entities-%E5%8C%85">2.4.4、删除 entities  包</a></li><li><a href="#245-%E5%BC%95%E5%85%A5%E5%85%AC%E5%85%B1%E5%8C%85%E4%BE%9D%E8%B5%96">2.4.5、引入公共包依赖</a></li></ul></li></ul></li><li><a href="#3-eureka">3、Eureka</a><ul><li><a href="#31-%E5%BB%BA%E7%AB%8Beureka">3.1、建立Eureka</a><ul><li><a href="#311-%E6%96%B0%E5%BB%BA-eurea-module">3.1.1、新建 Eurea   module</a></li><li><a href="#312-pom">3.1.2、pom</a></li><li><a href="#313-yml">3.1.3、yml</a></li><li><a href="#314-%E4%B8%BB%E5%90%AF%E5%8A%A8">3.1.4、主启动</a></li><li><a href="#315-%E6%9F%A5%E7%9C%8Beureka">3.1.5、查看eureka</a></li></ul></li><li><a href="#32-%E6%B3%A8%E5%86%8Ceureka%E6%8F%90%E4%BE%9B%E6%9C%8D%E5%8A%A1-cloud-provider-payment8001">3.2、注册eureka提供服务 cloud-provider-payment8001</a><ul><li><a href="#321-%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85client%E5%BC%95%E5%85%A5-eureka-client%E4%BE%9D%E8%B5%96">3.2.1、服务提供者（client）引入 eureka-client依赖</a></li><li><a href="#322-yml">3.2.2、yml</a></li><li><a href="#323-%E4%B8%BB%E5%90%AF%E5%8A%A8%E7%B1%BBpaymentmain8001%E5%8A%A0%E4%B8%8Aenableeurekaclient%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%90%AFeureka-client">3.2.3、主启动类PaymentMain8001加上@EnableEurekaClient注解，开启eureka client</a></li><li><a href="#324-%E6%B5%8B%E8%AF%95">3.2.4、测试</a><ul><li><a href="#3241-%E5%90%AF%E5%8A%A8-cloud-eureka-server7001-%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83">3.2.4.1、启动 cloud-eureka-server7001 注册中心</a></li><li><a href="#3242-%E5%90%AF%E5%8A%A8-cloud-provider-payment8001-%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85client">3.2.4.2、启动 cloud-provider-payment8001  服务提供者client</a></li><li><a href="#3243-%E6%B5%8F%E8%A7%88%E5%99%A8%E9%87%8D%E6%96%B0%E5%8A%A0%E8%BD%BD-%E6%88%96%E8%80%85-%E5%88%B7%E6%96%B0">3.2.4.3、浏览器重新加载 或者 刷新</a></li></ul></li></ul></li><li><a href="#33-%E6%B3%A8%E5%86%8Ceureka%E6%B6%88%E8%B4%B9%E6%9C%8D%E5%8A%A1-cloud-consumer-order80">3.3、注册eureka消费服务 cloud-consumer-order80</a><ul><li><a href="#331-%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85client%E5%BC%95%E5%85%A5-eureka-client%E4%BE%9D%E8%B5%96">3.3.1、服务消费者（client）引入 eureka-client依赖</a></li><li><a href="#332-yml">3.3.2、yml</a></li><li><a href="#333-%E4%B8%BB%E5%90%AF%E5%8A%A8%E7%B1%BBordermain80%E5%8A%A0%E4%B8%8Aenableeurekaclient%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%90%AFeureka-client">3.3.3、主启动类OrderMain80加上@EnableEurekaClient注解，开启eureka client</a></li><li><a href="#324-%E6%B5%8B%E8%AF%95-1">3.2.4、测试</a><ul><li><a href="#3241-%E5%90%AF%E5%8A%A8-cloud-eureka-server7001-%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83-1">3.2.4.1、启动 cloud-eureka-server7001 注册中心</a></li><li><a href="#3242-%E5%90%AF%E5%8A%A8-cloud-provider-payment8001-%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85client-1">3.2.4.2、启动 cloud-provider-payment8001  服务提供者client</a></li><li><a href="#3243-%E5%90%AF%E5%8A%A8-cloud-consumer-order80-%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85client">3.2.4.3、启动 cloud-consumer-order80  服务消费者client</a></li><li><a href="#3244-%E6%B5%8F%E8%A7%88%E5%99%A8%E9%87%8D%E6%96%B0%E5%8A%A0%E8%BD%BD-%E6%88%96%E8%80%85-%E5%88%B7%E6%96%B0">3.2.4.4、浏览器重新加载 或者 刷新</a></li></ul></li></ul></li><li><a href="#34-eureka%E9%9B%86%E7%BE%A4-%E6%90%AD%E5%BB%BA">3.4、eureka集群 搭建</a><ul><li><a href="#341-cloud-eureka-server7002-%E6%90%AD%E5%BB%BA">3.4.1、cloud-eureka-server7002 搭建</a><ul><li><a href="#3411-pom">3.4.1.1、pom</a></li><li><a href="#3412-yml">3.4.1.2、yml</a></li><li><a href="#3413-%E4%B8%BB%E5%90%AF%E5%8A%A8">3.4.1.3、主启动</a></li></ul></li><li><a href="#342-%E4%BF%AE%E6%94%B9%E6%98%A0%E5%B0%84%E9%85%8D%E7%BD%AE">3.4.2、修改映射配置</a></li><li><a href="#343-%E4%BF%AE%E6%94%B9%E9%9B%86%E7%BE%A4%E4%B8%8B%E7%9A%84yml-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83">3.4.3、修改集群下的yml-服务注册中心</a><ul><li><a href="#3431-cloud-eureka-server7001">3.4.3.1、cloud-eureka-server7001</a></li><li><a href="#3432-cloud-eureka-server7002">3.4.3.2、cloud-eureka-server7002</a></li></ul></li><li><a href="#344-%E5%B0%86%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E8%BF%9B-eureka-%E9%9B%86%E7%BE%A4">3.4.4、将服务注册进 eureka 集群</a></li><li><a href="#345-%E6%B5%8B%E8%AF%95">3.4.5、测试</a></li></ul></li><li><a href="#35-%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85%E7%9A%84-%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA">3.5、服务提供者的 集群搭建</a><ul><li><a href="#351-%E5%9F%BA%E7%A1%80%E4%BB%A3%E7%A0%81%E7%9B%B4%E6%8E%A5%E4%BB%8E8001%E8%BE%85%E5%8A%A9%E7%B2%98%E8%B4%B4">3.5.1、基础代码直接从8001辅助粘贴</a></li><li><a href="#352-%E4%BF%AE%E6%94%B9controoler%E6%96%B9%E4%BE%BF%E6%98%BE%E7%A4%BA%E8%B0%83%E7%94%A8%E7%9A%84%E6%98%AF%E5%93%AA%E4%B8%AA%E7%AB%AF%E5%8F%A3%E7%9A%84%E6%9C%8D%E5%8A%A1">3.5.2、修改controoler，方便显示调用的是哪个端口的服务</a></li><li><a href="#353-%E4%BF%AE%E6%94%B980%E4%B8%AD-ordercontroller%E8%B0%83%E7%94%A8%E7%9A%84%E7%AB%AF%E5%8F%A3">3.5.3、修改80中 OrderController调用的端口</a></li><li><a href="#354-%E6%B7%BB%E5%8A%A0-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1-%E6%B3%A8%E8%A7%A3">3.5.4、添加 负载均衡 注解</a></li><li><a href="#355-%E6%B5%8B%E8%AF%95">3.5.5、测试</a></li></ul></li><li><a href="#36-%E9%80%89actuator%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BF%A1%E6%81%AF%E5%AE%8C%E5%96%84">3.6、（选）actuator微服务信息完善</a></li><li><a href="#37-%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0discovery">3.7、服务发现Discovery</a><ul><li><a href="#371-%E7%BC%96%E8%BE%91%E8%A6%81%E6%89%93%E5%8D%B0%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E6%A0%BC%E5%BC%8F">3.7.1、编辑要打印的服务相关信息格式</a></li><li><a href="#372-%E5%BC%80%E5%90%AF-enablediscoveryclient-%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0">3.7.2、开启 @EnableDiscoveryClient  服务发现</a></li></ul></li><li><a href="#38-eureka%E8%87%AA%E6%88%91%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6">3.8、eureka自我保护机制</a></li></ul></li><li><a href="#4-zookeeper%E4%B8%8Espringcloud%E7%9A%84%E6%95%B4%E5%90%88">4、zookeeper与springcloud的整合</a><ul><li><a href="#41-zookeper-%E5%AE%89%E8%A3%85">4.1、zookeper 安装</a></li><li><a href="#42-%E6%96%B0%E5%BB%BA-cloud-provider-payment8004">4.2、新建 cloud-provider-payment8004</a><ul><li><a href="#421-pom">4.2.1、pom</a></li><li><a href="#422-yml">4.2.2、yml</a></li><li><a href="#423-%E4%B8%BB%E5%90%AF%E5%8A%A8">4.2.3、主启动</a></li><li><a href="#424-paymentcontroller">4.2.4、PaymentController</a></li><li><a href="#425-%E6%B5%8B%E8%AF%95">4.2.5、测试</a></li></ul></li><li><a href="#43-cloud-consumerzk-order80-%E6%B6%88%E8%B4%B9%E8%80%85%E6%A8%A1%E5%9D%97">4.3、cloud-consumerzk-order80 消费者模块</a><ul><li><a href="#431-pom">4.3.1、pom</a></li><li><a href="#432-yml">4.3.2、yml</a></li><li><a href="#433%E4%B8%BB%E5%90%AF%E5%8A%A8">4.3.3主启动</a></li><li><a href="#434-%E4%B8%9A%E5%8A%A1%E7%B1%BB">4.3.4、业务类</a><ul><li><a href="#4341-applicationcontextconfig">4.3.4.1、ApplicationContextConfig</a></li></ul></li><li><a href="#435-%E6%B5%8B%E8%AF%95">4.3.5、测试</a></li></ul></li></ul></li><li><a href="#5-consul">5、consul</a><ul><li><a href="#51-%E9%98%BF%E9%87%8C%E4%BA%91docker%E5%AE%89%E8%A3%85-consul">5.1、阿里云docker安装 consul</a></li><li><a href="#52-cloud-providerconsul-payment8006-%E6%A8%A1%E5%9D%97">5.2、cloud-providerconsul-payment8006 模块</a><ul><li><a href="#521-pom">5.2.1、pom</a></li><li><a href="#522-yml">5.2.2、yml</a></li><li><a href="#523-%E4%B8%BB%E5%90%AF%E5%8A%A8">5.2.3、主启动</a></li><li><a href="#524-%E4%B8%9A%E5%8A%A1%E7%B1%BB-paymentcontroller">5.2.4、业务类 PaymentController</a></li><li><a href="#525-%E5%90%AF%E5%8A%A88006">5.2.5、启动8006</a></li></ul></li><li><a href="#53-cloud-consumerconsul-order80-%E6%A8%A1%E5%9D%97">5.3、cloud-consumerconsul-order80 模块</a><ul><li><a href="#531-pom">5.3.1、pom</a></li><li><a href="#532-ynl">5.3.2、ynl</a></li><li><a href="#533-%E4%B8%BB%E5%90%AF%E5%8A%A8">5.3.3、主启动</a></li><li><a href="#534-%E4%B8%9A%E5%8A%A1%E7%B1%BB">5.3.4、业务类</a><ul><li><a href="#5341-config-%E9%85%8D%E7%BD%AE-resttemplate">5.3.4.1、Config 配置 RestTemplate</a></li><li><a href="#5341-controller">5.3.4.1、Controller</a></li></ul></li><li><a href="#535-%E6%B5%8B%E8%AF%95">5.3.5、测试</a></li></ul></li></ul></li><li><a href="#eureka-zookeeper-consul-%E7%9A%84%E6%AF%94%E8%BE%83">Eureka 、 zookeeper 、consul   的比较</a></li></ul><!-- tocstop --><hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr><ul><li><p>本笔记为尚硅谷老师 <strong>周阳</strong>  的springcloud 课程 所记</p></li><li><p>链接 <a href="https://www.bilibili.com/video/BV1yE411x7Ky?p=1">https://www.bilibili.com/video/BV1yE411x7Ky?p=1</a></p></li><li><p>写此笔记的初衷是之前学springboot时有分享的笔记，而这次课没有，为了更深刻的理解和掌握 微服务 </p></li><li><p>这是周阳老师的版本，为了高仿老师的实战，我所选的版本和周阳老师的几乎一样</p></li><li><p><img src="/2021/03/09/springcloud1/springcloud1%5Cimage-20200808084406263.png"></p></li><li><p>我的具体环境也粘贴一下把</p></li><li><table><thead><tr><th align="center">cloud</th><th align="center">H SR1</th></tr></thead><tbody><tr><td align="center">boot</td><td align="center">2.2.2.RELEASE</td></tr><tr><td align="center">cloud alibaba</td><td align="center">2.1.0.RELEASE</td></tr><tr><td align="center">java</td><td align="center">8</td></tr><tr><td align="center">maven</td><td align="center">3.6.3</td></tr><tr><td align="center">mysql</td><td align="center">5.7.30</td></tr></tbody></table></li></ul><hr><hr><h1 id="1-springcloud-环境搭建"><a href="#1、springcloud-环境搭建" class="headerlink" title="1、springcloud 环境搭建"></a>1、springcloud 环境搭建</h1><h2 id="11-父工程project"><a href="#1-1、父工程（project）" class="headerlink" title="1.1、父工程（project）"></a>1.1、父工程（project）</h2><h3 id="111-环境"><a href="#1-1-1、环境" class="headerlink" title="1.1.1、环境"></a>1.1.1、环境</h3><h4 id="1111-site骨架jdk8"><a href="#1-1-1-1、site骨架，jdk8" class="headerlink" title="1.1.1.1、site骨架，jdk8"></a>1.1.1.1、site骨架，jdk8</h4><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807135250551.png" alt="image-20200807135250551"></p><h4 id="1112-编码格式选择utf8如果出现问题会很麻烦"><a href="#1-1-1-2、编码格式选择utf8，如果出现问题会很麻烦" class="headerlink" title="1.1.1.2、编码格式选择utf8，如果出现问题会很麻烦"></a>1.1.1.2、编码格式选择utf8，如果出现问题会很麻烦</h4><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807135142897.png" alt="image-20200807135142897"></p><h4 id="1113-开启注解生效激活"><a href="#1-1-1-3、开启注解生效激活" class="headerlink" title="1.1.1.3、开启注解生效激活"></a>1.1.1.3、开启注解生效激活</h4><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807135441405.png" alt="image-20200807135441405"></p><h4 id="1114-java编译选择18默认的低版本会导致出错比如jdk6不支持接口的继承override"><a href="#1-1-1-4、java编译选择1-8，默认的低版本会导致出错（比如jdk6不支持接口的继承-Override" class="headerlink" title="1.1.1.4、java编译选择1.8，默认的低版本会导致出错（比如jdk6不支持接口的继承@Override"></a>1.1.1.4、java编译选择1.8，默认的低版本会导致出错（比如jdk6不支持接口的继承@Override</h4><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807135836394.png" alt="image-20200807135836394"></p><h4 id="1115-选做不显示-idea-等用不到的文件-可以在下面-添加-ideaiml"><a href="#1-1-1-5、（选做）不显示-idea-等用不到的文件-可以在下面-添加-idea-iml" class="headerlink" title="1.1.1.5、（选做）不显示   .idea 等用不到的文件  可以在下面  添加    *.idea;*.iml;"></a>1.1.1.5、（选做）不显示   .idea 等用不到的文件  可以在下面  添加    *.idea;*.iml;</h4><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807140038253.png" alt=" "></p><h3 id="112-pom配置"><a href="#1-1-2、pom配置" class="headerlink" title="1.1.2、pom配置"></a>1.1.2、pom配置</h3><h4 id="1121-这是创建项目时产生的"><a href="#1-1-2-1、这是创建项目时产生的" class="headerlink" title="1.1.2.1、这是创建项目时产生的"></a>1.1.2.1、这是创建项目时产生的</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springcloudtest<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ttest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1122-需要添加的"><a href="#1-1-2-2、需要添加的" class="headerlink" title="1.1.2.2、需要添加的"></a>1.1.2.2、需要添加的</h4><p>当 <dependencymanagement>中的包被子工程使用时，会选择父工程的版本，即不用 </dependencymanagement></p><p>***<groupid>org.springcloudtest</groupid>***和 ***<version>1.0-SNAPSHOT</version>***了</p><p>只需要   <em><strong><artifactid>ttest</artifactid></strong></em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--  父工程需要 引入这个，表示为总的工程 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 统一管理jar包版本 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.16.18<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">druid.version</span>&gt;</span>1.1.16<span class="tag">&lt;/<span class="name">druid.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis.spring.boot.version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">mybatis.spring.boot.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 子模块继承之后，提供作用：锁定版本+子modlue不用写groupId和version  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--spring boot 2.2.2--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--spring cloud Hoxton.SR1--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>Hoxton.SR1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--spring cloud alibaba 2.1.0.RELEASE--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.spring.boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junit.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">addResources</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addResources</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="113-跳过单元测试"><a href="#1-1-3、跳过单元测试" class="headerlink" title="1.1.3、跳过单元测试"></a>1.1.3、跳过单元测试</h3><blockquote><p>点击闪电形状按钮，test 显示为<del>test</del> 表示已经跳过</p></blockquote><blockquote><p>clean为清空父工程在仓库的依赖（常用来更新依赖包）<br>install 则把依赖包下载到仓库</p></blockquote><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807143247868.png" alt="image-20200807143247868"></p><h3 id="114-选可以删除父工程的src文件夹用不到"><a href="#1-1-4、（选）可以删除父工程的src文件夹（用不到）" class="headerlink" title="1.1.4、（选）可以删除父工程的src文件夹（用不到）"></a>1.1.4、（选）可以删除父工程的src文件夹（用不到）</h3><h2 id="12-微服务模块"><a href="#1-2、微服务模块" class="headerlink" title="1.2、微服务模块"></a>1.2、微服务模块</h2><blockquote><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloud-provider-payment8001</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1 建module</span><br><span class="line"></span><br><span class="line">2 改pom</span><br><span class="line"></span><br><span class="line">3 写YML</span><br><span class="line"></span><br><span class="line">4 主启动</span><br><span class="line"></span><br><span class="line">5 业务类</span><br></pre></td></tr></table></figure><h3 id="121-选中父工程右键新建modulejdk8别忘了"><a href="#1-2-1、选中父工程，右键新建module，jdk8别忘了" class="headerlink" title="1.2.1、选中父工程，右键新建module，jdk8别忘了"></a>1.2.1、选中父工程，右键新建module，jdk8别忘了</h3><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807144159234.png" alt="image-20200807144159234"></p><h3 id="122-填写名字finish"><a href="#1-2-2、填写名字，finish" class="headerlink" title="1.2.2、填写名字，finish"></a>1.2.2、填写名字，finish</h3><p>此时可以看到父工程的pom新增了 <strong><modules></modules></strong> 板块，记录的是刚建立的 <strong>module</strong>，每新增一个<strong>module</strong>就会在这里多一条记录</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springcloudtest<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ttest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">module</span>&gt;</span>test-provider<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="123-添加依赖"><a href="#1-2-3、添加依赖" class="headerlink" title="1.2.3、添加依赖"></a>1.2.3、添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--    web模块    --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--    监控和管理模块，和web模块搭配使用    --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--    热部署    --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--    注解 样板代码    --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--    test模块    --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="124-写yml-或者-properties"><a href="#1-2-4、写YML-或者-properties" class="headerlink" title="1.2.4、写YML  或者   properties"></a>1.2.4、写YML  或者   properties</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8001</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-payment-service</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span>            <span class="comment"># 当前数据源操作类型</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">org.gjt.mm.mysql.Driver</span>              <span class="comment"># mysql驱动包</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/db2019?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">9468943Zz</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapperLocations:</span> <span class="string">classpath:mapper/*.xml</span>   </span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.atguigu.springcloud.entities</span>    <span class="comment"># 所有Entity别名类所在包</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="125-启动类"><a href="#1-2-5、启动类" class="headerlink" title="1.2.5、启动类"></a>1.2.5、启动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentMain8001</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(PaymentMain8001.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="126-业务类"><a href="#1-2-6、业务类" class="headerlink" title="1.2.6、业务类"></a>1.2.6、业务类</h3><h4 id="1261-建表sql"><a href="#1-2-6-1、建表SQL" class="headerlink" title="1.2.6.1、建表SQL"></a>1.2.6.1、建表SQL</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `payment` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;ID&#x27;</span>,</span><br><span class="line">  `serial` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">5</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> `payment`(`id`,`serial`) <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">&#x27;尚硅谷&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;alibaba&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;京东&#x27;</span>),(<span class="number">4</span>,<span class="string">&#x27;头条&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="1262-entities"><a href="#1-2-6-2、entities" class="headerlink" title="1.2.6.2、entities"></a>1.2.6.2、entities</h4><h5 id="12621-payment实体类"><a href="#1-2-6-2-1、Payment实体类" class="headerlink" title="1.2.6.2.1、Payment实体类"></a>1.2.6.2.1、Payment实体类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span>      <span class="comment">//生成setter/getter、equals、canEqual、hashCode、toString方法，如为final属性，则不会为该属性生成setter方法。</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span>    <span class="comment">//全参构造器</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span>     <span class="comment">//无参构造器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Payment</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String serial;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="12622-commonresult封装类用于返回给前端的数据信息前后端分离"><a href="#1-2-6-2-2、CommonResult封装类，用于返回给前端的数据信息（前后端分离）" class="headerlink" title="1.2.6.2.2、CommonResult封装类，用于返回给前端的数据信息（前后端分离）"></a>1.2.6.2.2、CommonResult封装类，用于返回给前端的数据信息（前后端分离）</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommonResult</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">//404 not_found</span></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> String  message;</span><br><span class="line">    <span class="keyword">private</span> T       data;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CommonResult</span><span class="params">(Integer code, String message)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        this.code = code;</span></span><br><span class="line"><span class="comment">//        this.message = message;</span></span><br><span class="line">        <span class="keyword">this</span>(code,message, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1263-dao类-使用mapper注解把这个dao交給spring管理"><a href="#1-2-6-3、dao类-使用-Mapper注解，把这个DAO交給Spring管理" class="headerlink" title="1.2.6.3、dao类  使用@Mapper注解，把这个DAO交給Spring管理"></a>1.2.6.3、dao类  使用@Mapper注解，把这个DAO交給Spring管理</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PaymentDao</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">create</span><span class="params">(Payment payment)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Payment <span class="title">getPaymentById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1264-service"><a href="#1-2-6-4、Service" class="headerlink" title="1.2.6.4、Service"></a>1.2.6.4、Service</h4><h5 id="12641-paymentservice接口"><a href="#1-2-6-4-1、PaymentService接口" class="headerlink" title="1.2.6.4.1、PaymentService接口"></a>1.2.6.4.1、PaymentService接口</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PaymentService</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">create</span><span class="params">(Payment payment)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Payment <span class="title">getPaymentById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="12642-paymentserviceimpl实现类继承paymentservice接口"><a href="#1-2-6-4-2、PaymentServiceImpl实现类，继承PaymentService接口" class="headerlink" title="1.2.6.4.2、PaymentServiceImpl实现类，继承PaymentService接口"></a>1.2.6.4.2、PaymentServiceImpl实现类，继承PaymentService接口</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentServiceImpl</span> <span class="keyword">implements</span> <span class="title">PaymentService</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span>     <span class="comment">//注入PaymentDao</span></span><br><span class="line">    <span class="keyword">private</span> PaymentDao paymentDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">create</span><span class="params">(Payment payment)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> paymentDao.create(payment);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Payment <span class="title">getPaymentById</span><span class="params">(Long id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> paymentDao.getPaymentById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.2.6.5、PaymentController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span>     <span class="comment">//@Controller + @ResponseBody</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Controller</span>  表明了这个类是一个控制器类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ResponseBody</span> 表示方法的返回值直接以指定的格式写入Http response body中，而不是解析为跳转路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PaymentService paymentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(value = &quot;/payment/create&quot;)</span>     </span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">create</span><span class="params">(<span class="meta">@RequestBody</span> Payment payment)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = paymentService.create(payment);</span><br><span class="line">        log.info(<span class="string">&quot;*****插入结果：&quot;</span>+result);</span><br><span class="line">        <span class="keyword">if</span>(result &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CommonResult(<span class="number">200</span>,<span class="string">&quot;插入数据库成功&quot;</span>,result);</span><br><span class="line"><span class="comment">//            return new CommonResult(200,&quot;插入数据库成功,serverPort: &quot;+serverPort,result);</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CommonResult(<span class="number">444</span>,<span class="string">&quot;插入数据库失败&quot;</span>,<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/payment/get/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult&lt;Payment&gt; <span class="title">getPaymentById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Payment payment = paymentService.getPaymentById(id);</span><br><span class="line">        <span class="keyword">if</span>(payment != <span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">//            return new CommonResult(200,&quot;查询成功,serverPort:  &quot;+serverPort,payment);</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CommonResult(<span class="number">200</span>,<span class="string">&quot;查询成功  &quot;</span>,payment);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CommonResult(<span class="number">444</span>,<span class="string">&quot;没有对应记录,查询ID: &quot;</span>+id,<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1265-mapperxml"><a href="#1-2-6-5、mapper-xml" class="headerlink" title="1.2.6.5、mapper.xml"></a>1.2.6.5、mapper.xml</h4><blockquote><p>放在resources下，具体路径是yml中配置的mybatis信息</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapperLocations:</span> <span class="string">classpath:mapper/*.xml</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.atguigu.springcloud.entities</span>    <span class="comment"># 所有Entity别名类所在包</span></span><br></pre></td></tr></table></figure><blockquote><p>路径为  <strong>classpath:mapper/*.xml</strong></p></blockquote><blockquote><p>PaymentMapper.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.atguigu.springcloud.dao.PaymentDao&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;create&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Payment&quot;</span> <span class="attr">useGeneratedKeys</span>=<span class="string">&quot;true&quot;</span> <span class="attr">keyProperty</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">        insert into payment(serial)  values(#&#123;serial&#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;BaseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.atguigu.springcloud.entities.Payment&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;serial&quot;</span> <span class="attr">property</span>=<span class="string">&quot;serial&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getPaymentById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Long&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">        select * from payment where id=#&#123;id&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1266-项目模块结构图"><a href="#1-2-6-6、项目模块结构图" class="headerlink" title="1.2.6.6、项目模块结构图"></a>1.2.6.6、项目模块结构图</h4><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807152119506.png" alt="image-20200807152119506"></p><h4 id="1267-可以进行简单测试"><a href="#1-2-6-7、可以进行简单测试" class="headerlink" title="1.2.6.7、可以进行简单测试"></a>1.2.6.7、可以进行简单测试</h4><h5 id="12671-run"><a href="#1-2-6-7-1、run" class="headerlink" title="1.2.6.7.1、run"></a>1.2.6.7.1、run</h5><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807152531324.png" alt="image-20200807152531324"></p><h5 id="12672-浏览器输入-进行get测试"><a href="#1-2-6-7-2、浏览器输入-进行get测试" class="headerlink" title="1.2.6.7.2、浏览器输入 进行get测试"></a>1.2.6.7.2、浏览器输入 进行get测试</h5><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">http</span>://localhost:<span class="number">8001</span>/payment/get/<span class="number">1</span></span><br></pre></td></tr></table></figure><h5 id><a href="#" class="headerlink" title></a><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807181049821.png" alt="image-20200807181049821"></h5><h5 id="12673-使用postman-进行create测试postmapping"><a href="#1-2-6-7-3、使用postman-进行create测试，PostMapping" class="headerlink" title="1.2.6.7.3、使用postman 进行create测试，PostMapping"></a>1.2.6.7.3、使用postman 进行create测试，PostMapping</h5><p><strong>不能用浏览器进行测试！！！！！   浏览器发送的时get请求，controller收不到</strong></p><blockquote><p> 测试前要把</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(value = &quot;/payment/create&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">create</span><span class="params">(<span class="meta">@RequestBody</span> Payment payment)</span></span></span><br></pre></td></tr></table></figure><blockquote><p>中的 <strong>@RequestBody</strong> 注释掉，本地测试时用</p></blockquote><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">http</span>://localhost:<span class="number">8001</span>/payment/create?serial=zhangsan</span><br></pre></td></tr></table></figure><blockquote><p>传递给 <strong>/payment/create</strong> 的是 key-value的参数 而不是 json传递参数</p></blockquote><blockquote><p>@RequestBody 注解用前端 的 json 传递参数转化为是实体类对象</p></blockquote><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807181332833.png" alt="image-20200807181332833"></p><h1 id="2-springcloud入门"><a href="#2、springcloud入门" class="headerlink" title="2、springcloud入门"></a>2、springcloud入门</h1><h2 id="21-热部署"><a href="#2-1、热部署" class="headerlink" title="2.1、热部署"></a>2.1、热部署</h2><h3 id="211-依赖"><a href="#2-1-1、依赖" class="headerlink" title="2.1.1、依赖"></a>2.1.1、依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="212-maven插件"><a href="#2-1-2、maven插件" class="headerlink" title="2.1.2、maven插件"></a>2.1.2、maven插件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">addResources</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addResources</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="213-开启自动编译的选项"><a href="#2-1-3、开启自动编译的选项" class="headerlink" title="2.1.3、开启自动编译的选项"></a>2.1.3、开启自动编译的选项</h3><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807182450892.png" alt="image-20200807182450892"></p><h3 id="214-ctrlshiftalt-选择registry"><a href="#2-1-4、ctrl-shift-alt-选择registry" class="headerlink" title="2.1.4、ctrl+shift+alt+/    选择registry"></a>2.1.4、ctrl+shift+alt+/    选择registry</h3><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807182628626.png" alt="image-20200807182628626"></p><h3 id="215-勾上-这两个"><a href="#2-1-5、勾上-这两个" class="headerlink" title="2.1.5、勾上   这两个"></a>2.1.5、勾上   这两个</h3><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807182849962.png" alt="image-20200807182849962"></p><h3 id="216-热部署-只允许在开发阶段使用本身就是为了使开发简便而出现的上线时应该关闭这个功能"><a href="#2-1-6、热部署-只允许在开发阶段使用（本身就是为了使开发简便而出现的），上线时应该关闭这个功能" class="headerlink" title="2.1.6、热部署 只允许在开发阶段使用（本身就是为了使开发简便而出现的），上线时应该关闭这个功能"></a>2.1.6、热部署 只允许在开发阶段使用（本身就是为了使开发简便而出现的），上线时应该关闭这个功能</h3><h2 id="22-run-dashboard-或者-services-总控制台"><a href="#2-2、run-dashboard-或者-services-总控制台" class="headerlink" title="2.2、run dashboard   或者   services   总控制台"></a>2.2、run dashboard   或者   services   总控制台</h2><blockquote><p>当有2个及以上的module时就需要用 总控制台 来管理了，如果自己的idea  **run dashboard   或者   services **  没有自动产生</p></blockquote><blockquote><p>进入项目根文件夹下   .idea  文件夹</p></blockquote><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807185049300.png" alt="image-20200807185049300"></p><blockquote><p>打开 workspace.xml   ，适当位置插入下面语句，开启RunDashboard功能</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">component</span> <span class="attr">name</span>=<span class="string">&quot;RunDashboard&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;configurationTypes&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;SpringBootApplicationConfigurationType&quot;</span> /&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>重启idea</p></blockquote><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807185454843.png" alt="image-20200807185454843"></p><h2 id="23-cloud-consumer-order80-订单模块"><a href="#2-3、cloud-consumer-order80-订单模块" class="headerlink" title="2.3、cloud-consumer-order80   订单模块"></a>2.3、cloud-consumer-order80   订单模块</h2><blockquote><p>快速搭建，不墨迹了，可以参照  [ 1.2、微服务模块](# 1.2、微服务模块)</p></blockquote><h3 id="231-pom"><a href="#2-3-1、pom" class="headerlink" title="2.3.1、pom"></a>2.3.1、pom</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="232-ordermain80-主启动类"><a href="#2-3-2、OrderMain80-主启动类" class="headerlink" title="2.3.2、OrderMain80  主启动类"></a>2.3.2、OrderMain80  主启动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">//@EnableEurekaClient</span></span><br><span class="line"><span class="comment">//@RibbonClient(name = &quot;CLOUD-PAYMENT-SERVICE&quot;,configuration=MySelfRule.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMain80</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">            SpringApplication.run(OrderMain80.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="233-yml"><a href="#2-3-3、yml" class="headerlink" title="2.3.3、yml"></a>2.3.3、yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><h3 id="234-config-配置-resttemplate-进行远程调用"><a href="#2-3-4、Config-配置-RestTemplate-进行远程调用" class="headerlink" title="2.3.4、Config 配置 RestTemplate 进行远程调用"></a>2.3.4、Config 配置 RestTemplate 进行远程调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.springcloud.entities;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationContextConfig</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="comment">//@LoadBalanced</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">getRestTemplate</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//applicationContext.xml &lt;bean id=&quot;&quot; class=&quot;&quot;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="235-entities-复制过来"><a href="#2-3-5、entities-复制过来" class="headerlink" title="2.3.5、entities 复制过来"></a>2.3.5、entities 复制过来</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.springcloud.entities;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Payment</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String serial;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Payment</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String serial;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="236-controller"><a href="#2-3-6、controller" class="headerlink" title="2.3.6、controller"></a>2.3.6、controller</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.springcloud.controller;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderController</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PAYMENT_URL = <span class="string">&quot;http://localhost:8001&quot;</span>;</span><br><span class="line"><span class="comment">//    public static final String PAYMENT_URL = &quot;http://CLOUD-PAYMENT-SERVICE&quot;;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/consumer/payment/create&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult&lt;Payment&gt; <span class="title">create</span><span class="params">(Payment payment)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.postForObject(PAYMENT_URL +<span class="string">&quot;/payment/create&quot;</span>,payment,CommonResult.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/consumer/payment/get/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult&lt;Payment&gt; <span class="title">getPayment</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(PAYMENT_URL+<span class="string">&quot;/payment/get/&quot;</span>+id,CommonResult.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="24-创建公共模块"><a href="#2-4、创建公共模块" class="headerlink" title="2.4、创建公共模块"></a>2.4、创建公共模块</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloud-api-common</span><br></pre></td></tr></table></figure></blockquote><h3 id="241-pom"><a href="#2-4-1、pom" class="headerlink" title="2.4.1、pom"></a>2.4.1、pom</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="242-entities-粘贴过来"><a href="#2-4-2、entities-粘贴过来" class="headerlink" title="2.4.2、entities 粘贴过来"></a>2.4.2、entities 粘贴过来</h3><blockquote><p>包路径 要一样</p></blockquote><h3 id="243-maven-命令-clean-install"><a href="#2-4-3、maven-命令-clean-install" class="headerlink" title="2.4.3、maven 命令 clean  install"></a>2.4.3、maven 命令 clean  install</h3><h4 id="2431-选中-cloud-api-common-模块-点击maven-clean"><a href="#2-4-3-1、选中-cloud-api-common-模块-，点击maven-，clean" class="headerlink" title="2.4.3.1、选中 cloud-api-common  模块  ，点击maven  ，clean"></a>2.4.3.1、选中 cloud-api-common  模块  ，点击maven  ，clean</h4><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807211628930.png" alt="image-20200807211628930"></p><h4 id="2432-install"><a href="#2-4-3-2、install" class="headerlink" title="2.4.3.2、install"></a>2.4.3.2、install</h4><h3 id="244-删除-entities-包"><a href="#2-4-4、删除-entities-包" class="headerlink" title="2.4.4、删除 entities  包"></a>2.4.4、删除 entities  包</h3><h3 id="245-引入公共包依赖"><a href="#2-4-5、引入公共包依赖" class="headerlink" title="2.4.5、引入公共包依赖"></a>2.4.5、引入公共包依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span><span class="comment">&lt;!-- 引入自己定义的api通用包，可以使用Payment支付Entity --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.springcloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="3-eureka"><a href="#3、Eureka" class="headerlink" title="3、Eureka"></a>3、Eureka</h1><h2 id="31-建立eureka"><a href="#3-1、建立Eureka" class="headerlink" title="3.1、建立Eureka"></a>3.1、建立Eureka</h2><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807231409336.png" alt="image-20200807231409336"></p><h3 id="311-新建-eurea-module"><a href="#3-1-1、新建-Eurea-module" class="headerlink" title="3.1.1、新建 Eurea   module"></a>3.1.1、新建 Eurea   module</h3><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloud-eureka-server7001</span><br></pre></td></tr></table></figure></blockquote><h3 id="312-pom"><a href="#3-1-2、pom" class="headerlink" title="3.1.2、pom"></a>3.1.2、pom</h3><blockquote><p> 关键依赖eureka-server</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--eureka-server--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入自己定义的api通用包，可以使用Payment支付Entity --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.springcloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--boot web actuator--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一般通用配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="313-yml"><a href="#3-1-3、yml" class="headerlink" title="3.1.3、yml"></a>3.1.3、yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7001</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line"><span class="comment">#    hostname: eureka7001.com #eureka服务端的实例名称</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span> <span class="comment">#eureka服务端的实例名称</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>     <span class="comment">#false表示不向注册中心注册自己。</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span>     <span class="comment">#false表示自己端就是注册中心，我的职责就是维护服务实例，并不需要去检索服务</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br><span class="line">    <span class="comment">#集群指向其它eureka</span></span><br><span class="line">      <span class="comment">#defaultZone: http://eureka7002.com:7002/eureka/</span></span><br><span class="line">    <span class="comment">#单机就是7001自己</span></span><br><span class="line"><span class="comment">#      defaultZone: http://eureka7001.com:7001/eureka/</span></span><br><span class="line">  <span class="comment">#server:</span></span><br><span class="line">    <span class="comment">#关闭自我保护机制，保证不可用服务被及时踢除</span></span><br><span class="line">    <span class="comment">#enable-self-preservation: false</span></span><br><span class="line">    <span class="comment">#eviction-interval-timer-in-ms: 2000</span></span><br></pre></td></tr></table></figure><h3 id="314-主启动"><a href="#3-1-4、主启动" class="headerlink" title="3.1.4、主启动"></a>3.1.4、主启动</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span>    <span class="comment">//服务注册中心</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaMain7001</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">            SpringApplication.run(EurekaMain7001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>@EnableEurekaServer    //服务注册中心</p><p>必不可少</p></blockquote><h3 id="315-查看eureka"><a href="#3-1-5、查看eureka" class="headerlink" title="3.1.5、查看eureka"></a>3.1.5、查看eureka</h3><blockquote><p> <a href="http://localhost:7001/">http://localhost:7001/</a></p></blockquote><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200807234419874.png" alt="image-20200807234419874"></p><h2 id="32-注册eureka提供服务-cloud-provider-payment8001"><a href="#3-2、注册eureka提供服务-cloud-provider-payment8001" class="headerlink" title="3.2、注册eureka提供服务 cloud-provider-payment8001"></a>3.2、注册eureka提供服务 cloud-provider-payment8001</h2><h3 id="321-服务提供者client引入-eureka-client依赖"><a href="#3-2-1、服务提供者（client）引入-eureka-client依赖" class="headerlink" title="3.2.1、服务提供者（client）引入 eureka-client依赖"></a>3.2.1、服务提供者（client）引入 eureka-client依赖</h3><blockquote><p>cloud-provider-payment8001   </p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--eureka-client--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="322-yml"><a href="#3-2-2、yml" class="headerlink" title="3.2.2、yml"></a>3.2.2、yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment">#表示是否将自己注册进EurekaServer默认为true。</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">#是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡</span></span><br><span class="line">    <span class="attr">fetchRegistry:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="comment">#单机版</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka</span></span><br></pre></td></tr></table></figure><h3 id="323-主启动类paymentmain8001加上enableeurekaclient注解开启eureka-client"><a href="#3-2-3、主启动类PaymentMain8001加上-EnableEurekaClient注解，开启eureka-client" class="headerlink" title="3.2.3、主启动类PaymentMain8001加上@EnableEurekaClient注解，开启eureka client"></a>3.2.3、主启动类PaymentMain8001加上@EnableEurekaClient注解，开启eureka client</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentMain8001</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(PaymentMain8001.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="324-测试"><a href="#3-2-4、测试" class="headerlink" title="3.2.4、测试"></a>3.2.4、测试</h3><h4 id="3241-启动-cloud-eureka-server7001-注册中心"><a href="#3-2-4-1、启动-cloud-eureka-server7001-注册中心" class="headerlink" title="3.2.4.1、启动 cloud-eureka-server7001 注册中心"></a>3.2.4.1、启动 cloud-eureka-server7001 注册中心</h4><h4 id="3242-启动-cloud-provider-payment8001-服务提供者client"><a href="#3-2-4-2、启动-cloud-provider-payment8001-服务提供者client" class="headerlink" title="3.2.4.2、启动 cloud-provider-payment8001  服务提供者client"></a>3.2.4.2、启动 cloud-provider-payment8001  服务提供者client</h4><h4 id="3243-浏览器重新加载-或者-刷新"><a href="#3-2-4-3、浏览器重新加载-或者-刷新" class="headerlink" title="3.2.4.3、浏览器重新加载 或者 刷新"></a>3.2.4.3、浏览器重新加载 或者 刷新</h4><blockquote><p><a href="http://localhost:7001/">http://localhost:7001/</a></p></blockquote><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200808000648911.png" alt="image-20200808000648911"></p><blockquote><p>服务已注册</p></blockquote><h2 id="33-注册eureka消费服务-cloud-consumer-order80"><a href="#3-3、注册eureka消费服务-cloud-consumer-order80" class="headerlink" title="3.3、注册eureka消费服务 cloud-consumer-order80"></a>3.3、注册eureka消费服务 cloud-consumer-order80</h2><h3 id="331-服务消费者client引入-eureka-client依赖"><a href="#3-3-1、服务消费者（client）引入-eureka-client依赖" class="headerlink" title="3.3.1、服务消费者（client）引入 eureka-client依赖"></a>3.3.1、服务消费者（client）引入 eureka-client依赖</h3><blockquote><p>cloud-consumer-order80</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--eureka-client--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="332-yml"><a href="#3-3-2、yml" class="headerlink" title="3.3.2、yml"></a>3.3.2、yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">application:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">cloud-order-service</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment">#表示是否将自己注册进EurekaServer默认为true。</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment">#是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡</span></span><br><span class="line">    <span class="attr">fetchRegistry:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="comment">#单机</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka</span></span><br></pre></td></tr></table></figure><h3 id="333-主启动类ordermain80加上enableeurekaclient注解开启eureka-client"><a href="#3-3-3、主启动类OrderMain80加上-EnableEurekaClient注解，开启eureka-client" class="headerlink" title="3.3.3、主启动类OrderMain80加上@EnableEurekaClient注解，开启eureka client"></a>3.3.3、主启动类OrderMain80加上@EnableEurekaClient注解，开启eureka client</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="comment">//@RibbonClient(name = &quot;CLOUD-PAYMENT-SERVICE&quot;,configuration=MySelfRule.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMain80</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">            SpringApplication.run(OrderMain80.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="324-测试"><a href="#3-2-4、测试-1" class="headerlink" title="3.2.4、测试"></a>3.2.4、测试</h3><h4 id="3241-启动-cloud-eureka-server7001-注册中心"><a href="#3-2-4-1、启动-cloud-eureka-server7001-注册中心-1" class="headerlink" title="3.2.4.1、启动 cloud-eureka-server7001 注册中心"></a>3.2.4.1、启动 cloud-eureka-server7001 注册中心</h4><h4 id="3242-启动-cloud-provider-payment8001-服务提供者client"><a href="#3-2-4-2、启动-cloud-provider-payment8001-服务提供者client-1" class="headerlink" title="3.2.4.2、启动 cloud-provider-payment8001  服务提供者client"></a>3.2.4.2、启动 cloud-provider-payment8001  服务提供者client</h4><h4 id="3243-启动-cloud-consumer-order80-服务消费者client"><a href="#3-2-4-3、启动-cloud-consumer-order80-服务消费者client" class="headerlink" title="3.2.4.3、启动 cloud-consumer-order80  服务消费者client"></a>3.2.4.3、启动 cloud-consumer-order80  服务消费者client</h4><h4 id="3244-浏览器重新加载-或者-刷新"><a href="#3-2-4-4、浏览器重新加载-或者-刷新" class="headerlink" title="3.2.4.4、浏览器重新加载 或者 刷新"></a>3.2.4.4、浏览器重新加载 或者 刷新</h4><blockquote><p><a href="http://localhost:7001/">http://localhost:7001/</a></p></blockquote><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200808001740927.png" alt="image-20200808001740927"></p><blockquote><p>服务已注册，web测试可自行尝试，就不放截图了</p><p><a href="http://localhost/consumer/payment/get/1">http://localhost/consumer/payment/get/1</a></p><p><a href="http://localhost/consumer/payment/create?serial=wqwqwq">http://localhost/consumer/payment/create?serial=wqwqwq</a></p></blockquote><h2 id="34-eureka集群-搭建"><a href="#3-4、eureka集群-搭建" class="headerlink" title="3.4、eureka集群 搭建"></a>3.4、eureka集群 搭建</h2><blockquote><p>cloud-eureka-server7002    </p></blockquote><h3 id="341-cloud-eureka-server7002-搭建"><a href="#3-4-1、cloud-eureka-server7002-搭建" class="headerlink" title="3.4.1、cloud-eureka-server7002   搭建"></a>3.4.1、cloud-eureka-server7002   搭建</h3><blockquote><p> 和cloud-eureka-server7001 一样</p></blockquote><h4 id="3411-pom"><a href="#3-4-1-1、pom" class="headerlink" title="3.4.1.1、pom"></a>3.4.1.1、pom</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--eureka-server--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入自己定义的api通用包，可以使用Payment支付Entity --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.springcloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--boot web actuator--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一般通用配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3412-yml"><a href="#3-4-1-2、yml" class="headerlink" title="3.4.1.2、yml"></a>3.4.1.2、yml</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7002</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line"><span class="comment">#    hostname: eureka7002.com #eureka服务端的实例名称</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span> <span class="comment">#eureka服务端的实例名称</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>     <span class="comment">#false表示不向注册中心注册自己。</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span>     <span class="comment">#false表示自己端就是注册中心，我的职责就是维护服务实例，并不需要去检索服务</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br></pre></td></tr></table></figure><h4 id="3413-主启动"><a href="#3-4-1-3、主启动" class="headerlink" title="3.4.1.3、主启动"></a>3.4.1.3、主启动</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaMain7002</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">            SpringApplication.run(EurekaMain7002.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="342-修改映射配置"><a href="#3-4-2、修改映射配置" class="headerlink" title="3.4.2、修改映射配置"></a>3.4.2、修改映射配置</h3><blockquote><p>由于两个服务注册的端口都是本机地址127.0.0.1</p><p>无法区分，也就无法识别和连接</p><p>配置映射是为了在同一个地址（ip）下用不同的名字来区分相同功能的集群</p><p>好比一个班级两个学生名字一样，这就需要一个别名来区分这两个同学了</p><p>！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！</p><p>修改映射配置是在 C:\Windows\System32\drivers\etc  下面的 host 文件  （ win10系统）</p><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200808095517758.png" alt="image-20200808095517758"></p><p>添加你想要的映射如下</p></blockquote><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#############Springcloud2020.8.8###############</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  eureka7001.com</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  eureka7002.com</span><br></pre></td></tr></table></figure><h3 id="343-修改集群下的yml-服务注册中心"><a href="#3-4-3、修改集群下的yml-服务注册中心" class="headerlink" title="3.4.3、修改集群下的yml-服务注册中心"></a>3.4.3、修改集群下的yml-服务注册中心</h3><h4 id="3431-cloud-eureka-server7001"><a href="#3-4-3-1、cloud-eureka-server7001" class="headerlink" title="3.4.3.1、cloud-eureka-server7001"></a>3.4.3.1、cloud-eureka-server7001</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7001</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">eureka7001.com</span> <span class="comment">#eureka服务端的实例名称</span></span><br><span class="line"><span class="comment">#    hostname: localhost #eureka服务端的实例名称</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>     <span class="comment">#false表示不向注册中心注册自己。</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span>     <span class="comment">#false表示自己端就是注册中心，我的职责就是维护服务实例，并不需要去检索服务</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7002.com:7002/eureka/</span></span><br></pre></td></tr></table></figure><p>eureka:<br>  instance:<br>    hostname:   改为自己的映射名字</p><p>而</p><p> service-url:<br>      defaultZone  改为自己兄弟的名字和端口</p><h4 id="3432-cloud-eureka-server7002"><a href="#3-4-3-2、cloud-eureka-server7002" class="headerlink" title="3.4.3.2、cloud-eureka-server7002"></a>3.4.3.2、cloud-eureka-server7002</h4><blockquote><p>同理</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7002</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">eureka7002.com</span> <span class="comment">#eureka服务端的实例名称</span></span><br><span class="line"><span class="comment">#    hostname: localhost #eureka服务端的实例名称</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>     <span class="comment">#false表示不向注册中心注册自己。</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span>     <span class="comment">#false表示自己端就是注册中心，我的职责就是维护服务实例，并不需要去检索服务</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7001.com:7001/eureka/</span></span><br></pre></td></tr></table></figure><h3 id="344-将服务注册进-eureka-集群"><a href="#3-4-4、将服务注册进-eureka-集群" class="headerlink" title="3.4.4、将服务注册进 eureka 集群"></a>3.4.4、将服务注册进 eureka 集群</h3><blockquote><p>只需要将  defaultZone  配置从单机版改为集群版就行了 </p><p>cloud-provider-payment8001  和   cloud-consumer-order80   都改</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">#单机版</span></span><br><span class="line"><span class="comment">#      defaultZone: http://localhost:7001/eureka</span></span><br><span class="line">      <span class="comment"># 集群版</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka</span></span><br></pre></td></tr></table></figure><h3 id="345-测试"><a href="#3-4-5、测试" class="headerlink" title="3.4.5、测试"></a>3.4.5、测试</h3><blockquote><p>就不废话了，自己尝试 </p><p><a href="http://eureka7002.com/consumer/payment/get/1">http://eureka7002.com/consumer/payment/get/1</a></p><p><a href="http://localhost/consumer/payment/get/1">http://localhost/consumer/payment/get/1</a></p></blockquote><h2 id="35-服务提供者的-集群搭建"><a href="#3-5、服务提供者的-集群搭建" class="headerlink" title="3.5、服务提供者的 集群搭建"></a>3.5、服务提供者的 集群搭建</h2><blockquote><p>8001 支付服务在以前已经搭建好，但是只有一个是不够的，好比一个学校提供教学服务，只有一个老师，那肯定教不了所有学生</p></blockquote><p>由此，我们搭建 8002 支付服务</p><h3 id="351-基础代码直接从8001辅助粘贴"><a href="#3-5-1、基础代码直接从8001辅助粘贴" class="headerlink" title="3.5.1、基础代码直接从8001辅助粘贴"></a>3.5.1、基础代码直接从8001辅助粘贴</h3><blockquote><p>不过还有问题，可以参展前面的</p></blockquote><h3 id="352-修改controoler方便显示调用的是哪个端口的服务"><a href="#3-5-2、修改controoler，方便显示调用的是哪个端口的服务" class="headerlink" title="3.5.2、修改controoler，方便显示调用的是哪个端口的服务"></a>3.5.2、修改controoler，方便显示调用的是哪个端口的服务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String serverPort;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//            return new CommonResult(200,&quot;插入数据库成功&quot;,result);</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CommonResult(<span class="number">200</span>,<span class="string">&quot;插入数据库成功,serverPort: &quot;</span>+serverPort,result);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CommonResult(<span class="number">200</span>,<span class="string">&quot;查询成功,serverPort:  &quot;</span>+serverPort,payment);</span><br><span class="line"><span class="comment">//            return new CommonResult(200,&quot;查询成功  &quot;,payment);</span></span><br></pre></td></tr></table></figure><h3 id="353-修改80中-ordercontroller调用的端口"><a href="#3-5-3、修改80中-OrderController调用的端口" class="headerlink" title="3.5.3、修改80中 OrderController调用的端口"></a>3.5.3、修改80中 OrderController调用的端口</h3><blockquote><p>cloud-consumer-order80</p><p>使用服务名称 而不是写死的端口</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//    public static final String PAYMENT_URL = &quot;http://localhost:8001&quot;;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PAYMENT_URL = <span class="string">&quot;http://CLOUD-PAYMENT-SERVICE&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="354-添加-负载均衡-注解"><a href="#3-5-4、添加-负载均衡-注解" class="headerlink" title="3.5.4、添加 负载均衡 注解"></a>3.5.4、添加 负载均衡 注解</h3><blockquote><p>cloud-consumer-order80</p><p>如果没有添加这个注解 通过服务名字 注册中心不知道 调用哪个服务  8001 还是 8002</p><p>为  RestTemplate  远程调用类  添加   @LoadBalanced  注解</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationContextConfig</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">getRestTemplate</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="355-测试"><a href="#3-5-5、测试" class="headerlink" title="3.5.5、测试"></a>3.5.5、测试</h3><blockquote><p>。。。</p></blockquote><h2 id="36-选actuator微服务信息完善"><a href="#3-6、（选）actuator微服务信息完善" class="headerlink" title="3.6、（选）actuator微服务信息完善"></a>3.6、（选）actuator微服务信息完善</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">payment8001</span>    <span class="comment">#修改服务名称</span></span><br><span class="line">      <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>   <span class="comment">#访问路径可以显示IP地址</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">    <span class="attr">instance:</span></span><br><span class="line">      <span class="attr">instance-id:</span> <span class="string">payment8002</span>  <span class="comment">#修改服务名称</span></span><br><span class="line">      <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>   <span class="comment">#访问路径可以显示IP地址</span></span><br></pre></td></tr></table></figure><h2 id="37-服务发现discovery"><a href="#3-7、服务发现Discovery" class="headerlink" title="3.7、服务发现Discovery"></a>3.7、服务发现Discovery</h2><h3 id="371-编辑要打印的服务相关信息格式"><a href="#3-7-1、编辑要打印的服务相关信息格式" class="headerlink" title="3.7.1、编辑要打印的服务相关信息格式"></a>3.7.1、编辑要打印的服务相关信息格式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(value = &quot;/payment/discovery&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">discovery</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List&lt;String&gt; services = discoveryClient.getServices();</span><br><span class="line">    <span class="keyword">for</span> (String element : services) &#123;</span><br><span class="line">        log.info(<span class="string">&quot;*****element: &quot;</span>+element);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    List&lt;ServiceInstance&gt; instances = discoveryClient.getInstances(<span class="string">&quot;CLOUD-PAYMENT-SERVICE&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (ServiceInstance instance : instances) &#123;</span><br><span class="line">        log.info(instance.getServiceId()+<span class="string">&quot;\t&quot;</span>+instance.getHost()+<span class="string">&quot;\t&quot;</span>+instance.getPort()+<span class="string">&quot;\t&quot;</span>+instance.getUri());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.discoveryClient;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="372-开启-enablediscoveryclient-服务发现"><a href="#3-7-2、开启-EnableDiscoveryClient-服务发现" class="headerlink" title="3.7.2、开启 @EnableDiscoveryClient  服务发现"></a>3.7.2、开启 @EnableDiscoveryClient  服务发现</h3><blockquote><p>@EnableDiscoveryClient</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentMain8001</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(PaymentMain8001.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>8001  8002请自行修改</p></blockquote><h2 id="38-eureka自我保护机制"><a href="#3-8、eureka自我保护机制" class="headerlink" title="3.8、eureka自我保护机制"></a>3.8、eureka自我保护机制</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  <span class="attr">server:</span></span><br><span class="line"><span class="comment">#    关闭自我保护机制，保证不可用服务被及时踢除</span></span><br><span class="line">    <span class="attr">enable-self-preservation:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">eviction-interval-timer-in-ms:</span> <span class="number">2000</span></span><br></pre></td></tr></table></figure><h1 id="4-zookeeper与springcloud的整合"><a href="#4、zookeeper与springcloud的整合" class="headerlink" title="4、zookeeper与springcloud的整合"></a>4、zookeeper与springcloud的整合</h1><h2 id="41-zookeper-安装"><a href="#4-1、zookeper-安装" class="headerlink" title="4.1、zookeper 安装"></a>4.1、zookeper 安装</h2><blockquote><p>略</p><p>写和实验的时候，我实在阿里云上docker下安装的最新版zookeeper  2020年7月底  版本 3.6.x</p></blockquote><h2 id="42-新建-cloud-provider-payment8004"><a href="#4-2、新建-cloud-provider-payment8004" class="headerlink" title="4.2、新建 cloud-provider-payment8004"></a>4.2、新建 cloud-provider-payment8004</h2><h3 id="421-pom"><a href="#4-2-1、pom" class="headerlink" title="4.2.1、pom"></a>4.2.1、pom</h3><blockquote><p>报错，可能是你的zookeper  jar包版本和你的安装版本冲突，下面依赖中注释部分可以更改，以消除版本的问题</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- SpringBoot整合Web组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span><span class="comment">&lt;!-- 引入自己定义的api通用包，可以使用Payment支付Entity --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.springcloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- SpringBoot整合zookeeper客户端 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zookeeper-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &amp;lt;!&amp;ndash;先排除自带的zookeeper3.5.3&amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;exclusions&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;exclusion&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                    &lt;groupId&gt;org.apache.zookeeper&lt;/groupId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                    &lt;artifactId&gt;zookeeper&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;/exclusion&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;/exclusions&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &amp;lt;!&amp;ndash;添加zookeeper3.4.9版本&amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;groupId&gt;org.apache.zookeeper&lt;/groupId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;artifactId&gt;zookeeper&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;version&gt;3.4.9&lt;/version&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="422-yml"><a href="#4-2-2、yml" class="headerlink" title="4.2.2、yml"></a>4.2.2、yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#8004表示注册到zookeeper服务器的支付服务提供者端口号</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8004</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#服务别名----注册zookeeper到注册中心名称</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-provider-payment</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">zookeeper:</span></span><br><span class="line">      <span class="attr">connect-string:</span> <span class="number">39.99</span><span class="number">.195</span><span class="number">.169</span><span class="string">:2181</span></span><br></pre></td></tr></table></figure><h3 id="423-主启动"><a href="#4-2-3、主启动" class="headerlink" title="4.2.3、主启动"></a>4.2.3、主启动</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span> <span class="comment">//该注解用于向使用consul或者zookeeper作为注册中心时注册服务</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentMain8004</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">            SpringApplication.run(PaymentMain8004.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="424-paymentcontroller"><a href="#4-2-4、PaymentController" class="headerlink" title="4.2.4、PaymentController"></a>4.2.4、PaymentController</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String serverPort;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/payment/zk&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">paymentzk</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;springcloud with zookeeper: &quot;</span>+serverPort+<span class="string">&quot;\t&quot;</span>+ UUID.randomUUID().toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="425-测试"><a href="#4-2-5、测试" class="headerlink" title="4.2.5、测试"></a>4.2.5、测试</h3><blockquote><p> <a href="http://localhost:8004/payment/zk">http://localhost:8004/payment/zk</a></p></blockquote><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200808221608456.png" alt="image-20200808221608456"></p><h2 id="43-cloud-consumerzk-order80-消费者模块"><a href="#4-3、cloud-consumerzk-order80-消费者模块" class="headerlink" title="4.3、cloud-consumerzk-order80  消费者模块"></a>4.3、cloud-consumerzk-order80  消费者模块</h2><h3 id="431-pom"><a href="#4-3-1、pom" class="headerlink" title="4.3.1、pom"></a>4.3.1、pom</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- SpringBoot整合Web组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span><span class="comment">&lt;!-- 引入自己定义的api通用包，可以使用Payment支付Entity --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.springcloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- SpringBoot整合zookeeper客户端 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zookeeper-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="432-yml"><a href="#4-3-2、yml" class="headerlink" title="4.3.2、yml"></a>4.3.2、yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-consumer-order</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">zookeeper:</span></span><br><span class="line">      <span class="attr">connect-string:</span> <span class="number">39.99</span><span class="number">.195</span><span class="number">.169</span><span class="string">:2181</span></span><br></pre></td></tr></table></figure><h3 id="433主启动"><a href="#4-3-3主启动" class="headerlink" title="4.3.3主启动"></a>4.3.3主启动</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderZKMain80</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">            SpringApplication.run(OrderZKMain80.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="434-业务类"><a href="#4-3-4、业务类" class="headerlink" title="4.3.4、业务类"></a>4.3.4、业务类</h3><h4 id="4341-applicationcontextconfig"><a href="#4-3-4-1、ApplicationContextConfig" class="headerlink" title="4.3.4.1、ApplicationContextConfig"></a>4.3.4.1、ApplicationContextConfig</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationContextConfig</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">getRestTemplate</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.3.4.1、OrderZKController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderZKController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String INVOKE_URL = <span class="string">&quot;http://cloud-provider-payment&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/consumer/payment/zk&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">paymentInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        String result = restTemplate.getForObject(INVOKE_URL+<span class="string">&quot;/payment/zk&quot;</span>,String.class);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="435-测试"><a href="#4-3-5、测试" class="headerlink" title="4.3.5、测试"></a>4.3.5、测试</h3><blockquote><p><a href="http://localhost:8004/payment/zk">http://localhost:8004/payment/zk</a></p><p><a href="http://localhost/consumer/payment/zk">http://localhost/consumer/payment/zk</a></p></blockquote><h1 id="5-consul"><a href="#5、consul" class="headerlink" title="5、consul"></a>5、consul</h1><h2 id="51-阿里云docker安装-consul"><a href="#5-1、阿里云docker安装-consul" class="headerlink" title="5.1、阿里云docker安装 consul"></a>5.1、阿里云docker安装 consul</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注：周阳老师是在本地安装 consul ，而我是在阿里云上，有一点区别，安装的consul 2020.8月初 latest 版本</span><br></pre></td></tr></table></figure><blockquote><p>docker pull consul</p></blockquote><blockquote><p>docker run –name consul -p 8500:8500 -v /data/consul/conf/:/consul/conf/ -v /data/consul/data/:/consul<br>/data/ -d consul</p></blockquote><blockquote><p>记得打开阿里云安全组 端口  8500</p></blockquote><blockquote><p>访问 consul  客户端</p><p><a href="http://39.99.195.169:8500/">http://39.99.195.169:8500</a></p></blockquote><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200810165323909.png" alt="image-20200810165323909"></p><h2 id="52-cloud-providerconsul-payment8006-模块"><a href="#5-2、cloud-providerconsul-payment8006-模块" class="headerlink" title="5.2、cloud-providerconsul-payment8006  模块"></a>5.2、cloud-providerconsul-payment8006  模块</h2><blockquote><p>cloud-providerconsul-payment8006</p></blockquote><h3 id="521-pom"><a href="#5-2-1、pom" class="headerlink" title="5.2.1、pom"></a>5.2.1、pom</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入自己定义的api通用包，可以使用Payment支付Entity --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.springcloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--SpringCloud consul-server --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- SpringBoot整合Web组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--日常通用jar包配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;groupId&gt;cn.hutool&lt;/groupId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;artifactId&gt;hutool-all&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;version&gt;RELEASE&lt;/version&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;scope&gt;test&lt;/scope&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;groupId&gt;cn.hutool&lt;/groupId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;artifactId&gt;hutool-all&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;version&gt;RELEASE&lt;/version&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;scope&gt;test&lt;/scope&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="522-yml"><a href="#5-2-2、yml" class="headerlink" title="5.2.2、yml"></a>5.2.2、yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###consul服务端口号</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8006</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">consul-provider-payment</span></span><br><span class="line"><span class="comment">####consul注册中心地址</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="number">39.99</span><span class="number">.195</span><span class="number">.169</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="comment">#hostname: 127.0.0.1</span></span><br><span class="line">        <span class="attr">service-name:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br></pre></td></tr></table></figure><h3 id="523-主启动"><a href="#5-2-3、主启动" class="headerlink" title="5.2.3、主启动"></a>5.2.3、主启动</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentMain8006</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">            SpringApplication.run(PaymentMain8006.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="524-业务类-paymentcontroller"><a href="#5-2-4、业务类-PaymentController" class="headerlink" title="5.2.4、业务类  PaymentController"></a>5.2.4、业务类  PaymentController</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String serverPort;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/payment/consul&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">paymentConsul</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;springcloud with consul: &quot;</span>+serverPort+<span class="string">&quot;\t   &quot;</span>+ UUID.randomUUID().toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="525-启动8006"><a href="#5-2-5、启动8006" class="headerlink" title="5.2.5、启动8006"></a>5.2.5、启动8006</h3><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200810171136436.png" alt="image-20200810171136436"></p><p>如果发现这个红叉 可以不管，是服务器获取不到你8006这边的健康状况</p><p>如果不放心可以查看一下8006的健康状况</p><blockquote><p><a href="http://localhost:8006/actuator/health">http://localhost:8006/actuator/health</a></p></blockquote><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200810171322188.png" alt="image-20200810171322188"></p><p>说明是没问题的</p><p>如果你有强迫症，非要解决这个现实问题，可以去阿里云上的consul添加你主机的映射</p><h2 id="53-cloud-consumerconsul-order80-模块"><a href="#5-3、cloud-consumerconsul-order80-模块" class="headerlink" title="5.3、cloud-consumerconsul-order80 模块"></a>5.3、cloud-consumerconsul-order80 模块</h2><blockquote><p>cloud-consumerconsul-order80</p></blockquote><h3 id="531-pom"><a href="#5-3-1、pom" class="headerlink" title="5.3.1、pom"></a>5.3.1、pom</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--SpringCloud consul-server --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- SpringBoot整合Web组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--日常通用jar包配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="532-ynl"><a href="#5-3-2、ynl" class="headerlink" title="5.3.2、ynl"></a>5.3.2、ynl</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###consul服务端口号</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-consumer-order</span></span><br><span class="line">  <span class="comment">####consul注册中心地址</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="number">39.99</span><span class="number">.195</span><span class="number">.169</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="comment">#hostname: 127.0.0.1</span></span><br><span class="line">        <span class="attr">service-name:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br></pre></td></tr></table></figure><h3 id="533-主启动"><a href="#5-3-3、主启动" class="headerlink" title="5.3.3、主启动"></a>5.3.3、主启动</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span> <span class="comment">//该注解用于向使用consul或者zookeeper作为注册中心时注册服务</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderConsulMain80</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">            SpringApplication.run(OrderConsulMain80.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="534-业务类"><a href="#5-3-4、业务类" class="headerlink" title="5.3.4、业务类"></a>5.3.4、业务类</h3><h4 id="5341-config-配置-resttemplate"><a href="#5-3-4-1、Config-配置-RestTemplate" class="headerlink" title="5.3.4.1、Config 配置 RestTemplate"></a>5.3.4.1、Config 配置 RestTemplate</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class ApplicationContextConfig</span><br><span class="line">&#123;</span><br><span class="line">    @Bean</span><br><span class="line">    @LoadBalanced</span><br><span class="line">    public RestTemplate getRestTemplate()</span><br><span class="line">    &#123;</span><br><span class="line">        return new RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5341-controller"><a href="#5-3-4-1、Controller" class="headerlink" title="5.3.4.1、Controller"></a>5.3.4.1、Controller</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderConsulController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String INVOKE_URL = <span class="string">&quot;http://consul-provider-payment&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/consumer/payment/consul&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">paymentInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        String result = restTemplate.getForObject(INVOKE_URL+<span class="string">&quot;/payment/consul&quot;</span>,String.class);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="535-测试"><a href="#5-3-5、测试" class="headerlink" title="5.3.5、测试"></a>5.3.5、测试</h3><blockquote><p>略</p></blockquote><h1 id="eureka-zookeeper-consul-的比较"><a href="#Eureka-、-zookeeper-、consul-的比较" class="headerlink" title="Eureka 、 zookeeper 、consul   的比较"></a>Eureka 、 zookeeper 、consul   的比较</h1><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200810181629195.png" alt="image-20200810181629195"></p><p>经典CAP图</p><p><img src="/2021/03/09/springcloud1/Users\MSI-NB\AppData\Roaming\Typora\typora-user-images\image-20200810182002845.png" alt="image-20200810182002845"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;springcloud 简单入门。以及基本组件的使用。&lt;/p&gt;</summary>
    
    
    
    <category term="springcloud" scheme="http://zhouzhe111.github.io/categories/springcloud/"/>
    
    
  </entry>
  
  <entry>
    <title>axios</title>
    <link href="http://zhouzhe111.github.io/2021/03/09/axios/"/>
    <id>http://zhouzhe111.github.io/2021/03/09/axios/</id>
    <published>2021-03-09T11:29:59.000Z</published>
    <updated>2021-04-09T11:42:27.326Z</updated>
    
    <content type="html"><![CDATA[<p>Axios是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中。</p><p>axios：前端通信框架，因为vue的边界很明确，就是为了处理DOM，所以并不具备通信功能，此时就需要额外使用一个通信框架与服务器交互；当然也可以使用jQuery提供的AJAX通信功能。</p><span id="more"></span><hr><!-- toc --><ul><li><a href="#%E5%89%8D%E8%A8%80">前言</a></li><li><a href="#axios-%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8"><strong>axios 的基本使用</strong></a><ul><li><a href="#1-%E5%85%88%E8%AF%B4%E4%B8%80%E4%B8%8B%E6%80%8E%E4%B9%88%E5%AE%89%E8%A3%85%E5%92%8C%E5%BC%95%E5%85%A5">1、先说一下怎么安装和引入：</a></li><li><a href="#2-axios-%E6%9C%89%E5%BE%88%E5%A4%9A%E8%AF%B7%E6%B1%82%E6%96%B9%E5%BC%8F%E5%85%B7%E4%BD%93%E5%8F%AF%E4%BB%A5%E7%9C%8B%E4%B8%80%E4%B8%8B%E5%AE%98%E7%BD%91%E7%9A%84api%E4%B8%8B%E9%9D%A2%E8%AF%B4%E4%B8%80%E4%B8%8B%E6%9C%80%E5%9F%BA%E6%9C%AC%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F">2、axios 有很多请求方式，具体可以看一下官网的API，下面说一下最基本的使用方式：</a></li><li><a href="#3-%E6%88%91%E4%B8%AA%E4%BA%BA%E6%9B%B4%E5%96%9C%E6%AC%A2%E8%B0%83%E7%94%A8%E5%B0%81%E8%A3%85%E6%96%B9%E6%B3%95%E7%9A%84%E5%BD%A2%E5%BC%8F">3、我个人更喜欢调用封装方法的形式</a></li></ul></li></ul><!-- tocstop --><hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><img src="/2021/03/09/axios/axios%5C1599893771678509.png"></p><h1 id="axios-的基本使用"><a href="#axios-的基本使用" class="headerlink" title="axios 的基本使用"></a><strong>axios 的基本使用</strong></h1><h2 id="1-先说一下怎么安装和引入"><a href="#1、先说一下怎么安装和引入：" class="headerlink" title="1、先说一下怎么安装和引入："></a>1、先说一下怎么安装和引入：</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install axios --save    <span class="comment">//项目中安装</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>    <span class="comment">//使用前引入</span></span><br><span class="line">Vue.prototype.$axios = axios;  <span class="comment">//vue使用axios</span></span><br></pre></td></tr></table></figure><h2 id="2-axios-有很多请求方式具体可以看一下官网的api下面说一下最基本的使用方式"><a href="#2、axios-有很多请求方式，具体可以看一下官网的API，下面说一下最基本的使用方式：" class="headerlink" title="2、axios 有很多请求方式，具体可以看一下官网的API，下面说一下最基本的使用方式："></a>2、axios 有很多请求方式，具体可以看一下官网的API，下面说一下最基本的使用方式：</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">axios(&#123;</span><br><span class="line">  url:<span class="string">&#x27;http://127.0.0.1:8000/home/login&#x27;</span>,  <span class="comment">//这里写你要发请求的服务器url</span></span><br><span class="line">  method:<span class="string">&#x27;get&#x27;</span><span class="comment">//(默认是get请求)</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res);    <span class="comment">//在控制台查看请求的数据</span></span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line">axios(&#123;        </span><br><span class="line">  url:<span class="string">&#x27;http://127.0.0.1:8000/home/register&#x27;</span>,  <span class="comment">//这里写你要发请求的服务器url</span></span><br><span class="line">  params:&#123;      <span class="comment">//专门针对get请求的参数拼接,如果是post请求用 data:&#123;&#125;</span></span><br><span class="line">    type:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    page:</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res);    <span class="comment">//在控制台查看请求的数据</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="3-我个人更喜欢调用封装方法的形式"><a href="#3、我个人更喜欢调用封装方法的形式" class="headerlink" title="3、我个人更喜欢调用封装方法的形式"></a>3、我个人更喜欢调用封装方法的形式</h2><blockquote><p>post</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>; <span class="comment">// 引入axios</span></span><br><span class="line"><span class="keyword">import</span> qs <span class="keyword">from</span> <span class="string">&quot;qs&quot;</span>; <span class="comment">// 引入qs模块，用来序列化post类型的数据</span></span><br><span class="line"><span class="comment">//metheds中</span></span><br><span class="line"> axios</span><br><span class="line">        .post(<span class="string">&quot;http://localhost:8888/user&quot;</span>, <span class="built_in">JSON</span>.stringify(kk), &#123;</span><br><span class="line">          headers: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json;charset=UTF-8&quot;</span> &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">        .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (res.status == <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="comment">// to do</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">           <span class="comment">// to do</span></span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><blockquote><p>get</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>; <span class="comment">// 引入axios</span></span><br><span class="line"><span class="keyword">import</span> qs <span class="keyword">from</span> <span class="string">&quot;qs&quot;</span>; <span class="comment">// 引入qs模块，用来序列化post类型的数据</span></span><br><span class="line"><span class="comment">//metheds中</span></span><br><span class="line">axios</span><br><span class="line">            .get(<span class="string">&quot;http://localhost:8888/user&quot;</span>, &#123;</span><br><span class="line">              params: &#123; <span class="attr">name</span>: <span class="built_in">this</span>.$store.state.taken &#125;,</span><br><span class="line">            &#125;)</span><br><span class="line">            .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">if</span> (res.status == <span class="number">200</span>) &#123;</span><br><span class="line">                 <span class="comment">// to do</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// to do</span></span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Axios是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中。&lt;/p&gt;
&lt;p&gt;axios：前端通信框架，因为vue的边界很明确，就是为了处理DOM，所以并不具备通信功能，此时就需要额外使用一个通信框架与服务器交互；当然也可以使用jQuery提供的AJAX通信功能。&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="http://zhouzhe111.github.io/categories/vue/"/>
    
    
  </entry>
  
</feed>
